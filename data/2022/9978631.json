{
    "abstract": "Blindcoin applies a Bitcoin-compatible mixing protocol with a blind signature scheme to improve the design of the popular Mixcoin. Given the openness of Bitcoin and the decentralization of the P2P network, it is imperative to formally analyze whether the malicious can break the security goals of the Blindcoin protocol. This work proposes a symbolic model for Blindcoin and conducts comprehensive fo...",
    "articleNumber": "9978631",
    "articleTitle": "Comprehensive Formal Modeling and Automatic Vulnerability Detection for a Bitcoin-Compatible Mixing Protocol",
    "authors": [
        {
            "preferredName": "Xianglin Bao",
            "normalizedName": "X. Bao",
            "firstName": "Xianglin",
            "lastName": "Bao",
            "searchablePreferredName": "Xianglin Bao"
        },
        {
            "preferredName": "Xiaofeng Xu",
            "normalizedName": "X. Xu",
            "firstName": "Xiaofeng",
            "lastName": "Xu",
            "searchablePreferredName": "Xiaofeng Xu"
        },
        {
            "preferredName": "Ping Zhang",
            "normalizedName": "P. Zhang",
            "firstName": "Ping",
            "lastName": "Zhang",
            "searchablePreferredName": "Ping Zhang"
        },
        {
            "preferredName": "Tao Liu",
            "normalizedName": "T. Liu",
            "firstName": "Tao",
            "lastName": "Liu",
            "searchablePreferredName": "Tao Liu"
        }
    ],
    "doi": "10.1109/ACCESS.2022.3228109",
    "publicationTitle": "IEEE Access",
    "publicationYear": "2022",
    "publicationVolume": null,
    "publicationIssue": null,
    "volume": "10",
    "issue": null,
    "documentLink": "/document/9978631/",
    "xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<response><accessType>CCBY - IEEE is not the copyright holder of this material. Please follow the instructions via https://creativecommons.org/licenses/by/4.0/ to obtain full-text articles and stipulations in the API documentation.</accessType><div id=\"BodyWrapper\" class=\"ArticlePage\" xmlns:ieee=\"http://www.ieeexplore.ieee.org\"><div id=\"article\">\n<div class=\"section\" id=\"sec1\"><div class=\"header article-hdr\"><div class=\"kicker\">\n\t\t                        SECTION I.</div><h2>Introduction</h2></div><p>Bitcoin is one of the best-performing cryptocurrencies. The users trade with their pseudonymous addresses and manage huge assets autonomously <a ref-type=\"bibr\" anchor=\"ref1\" id=\"context_ref_1_1\">[1]</a>. However, the blockchain security <a ref-type=\"bibr\" anchor=\"ref2\" id=\"context_ref_2_1\">[2]</a> and the anonymity of Bitcoin users cannot be fully guaranteed <a ref-type=\"bibr\" anchor=\"ref3\" id=\"context_ref_3_1\">[3]</a>, <a ref-type=\"bibr\" anchor=\"ref4\" id=\"context_ref_4_1\">[4]</a>, <a ref-type=\"bibr\" anchor=\"ref5\" id=\"context_ref_5_1\">[5]</a>. After requesting the Bitcoin transaction list, deanonymization attacks can be launched based on the address analysis <a ref-type=\"bibr\" anchor=\"ref6\" id=\"context_ref_6_1\">[6]</a>, <a ref-type=\"bibr\" anchor=\"ref7\" id=\"context_ref_7_1\">[7]</a>, <a ref-type=\"bibr\" anchor=\"ref8\" id=\"context_ref_8_1\">[8]</a>. Mixcoin, as a landmark of the Bitcoin mixing service, hides the address links with the middle mix to prevent the deanonymization attack <a ref-type=\"bibr\" anchor=\"ref9\" id=\"context_ref_9_1\">[9]</a>. While the middle mix still has access to the address links and can deanonymize Bitcoin users <a ref-type=\"bibr\" anchor=\"ref10\" id=\"context_ref_10_1\">[10]</a>. To improve the design of Mixcoin, the Blindcoin protocol is proposed to hide the address links from the middle mix by applying a Bitcoin-compatible mixing protocol with a blind signature scheme <a ref-type=\"bibr\" anchor=\"ref11\" id=\"context_ref_11_1\">[11]</a>.</p><p>Although Blindcoin improves the Mixcoin and enhances Bitcoin anonymity, it is imperative to analyze the Blindcoin security. The malicious can cause the irrecoverable loss of Bitcoin users who adopt mixing service <a ref-type=\"bibr\" anchor=\"ref12\" id=\"context_ref_12_1\">[12]</a>. Due to the openness of Bitcoin and the decentralized P2P network, the malicious can also pollute the network traffic and manipulate the protocol communication. Since no authority is responsible for the middle mix selection, the malicious can act as the middle mix to destroy protocol execution and steal Bitcoin <a ref-type=\"bibr\" anchor=\"ref8\" id=\"context_ref_8_1\">[8]</a>. Therefore, Bitcoin users require a efficient and convincing security analysis to detect vulnerabilities of the Bitcoin-compatible mixing protocols. Related works <a ref-type=\"bibr\" anchor=\"ref6\" id=\"context_ref_6_1\">[6]</a>, <a ref-type=\"bibr\" anchor=\"ref8\" id=\"context_ref_8_1\">[8]</a>, <a ref-type=\"bibr\" anchor=\"ref9\" id=\"context_ref_9_1\">[9]</a>, <a ref-type=\"bibr\" anchor=\"ref11\" id=\"context_ref_11_1\">[11]</a>, <a ref-type=\"bibr\" anchor=\"ref12\" id=\"context_ref_12_1\">[12]</a> have provided the informal security analysis of Bitcoin mixing service with manual reasoning and offered suggestions for users to mix their Bitcoin. Compared to formal verification, informal security analysis needs human efforts but is hard to discover hidden vulnerabilities.</p><p>Few previous works have considered formal verification of protocol built for Bitcoin mixing services. It remains an open problem to formally model the Bitcoin-compatible mixing protocol and verify its security properties. Meanwhile, the automatic verifiable model can avoid error-prone reasoning and the advanced tool can construct the security proof of the symbolic model automatically <a ref-type=\"bibr\" anchor=\"ref13\" id=\"context_ref_13_1\">[13]</a>. In this paper, we address this gap by proposing an automatic verifiable model for Blindcoin in the symbolic settings.</p><div class=\"section_2\" id=\"sec1a\"><h3>A. Related Works</h3><p>There are rigorous related works that concentrate on blockchain formalization as shown in <a ref-type=\"table\" anchor=\"table1\" class=\"fulltext-link\">Table 1</a>. Garay et al. provided a formal model of the Bitcoin backbone <a ref-type=\"bibr\" anchor=\"ref14\" id=\"context_ref_14_1a\">[14]</a>. Atzei et al. proposed a formal model for Bitcoin transactions <a ref-type=\"bibr\" anchor=\"ref15\" id=\"context_ref_15_1a\">[15]</a>. Bao et al. formalized Bitcoin core protocols in the symbolic setting, and discovered the computational power stealing attack of Bitcoin stratum protocol with the machine-verified proofs <a ref-type=\"bibr\" anchor=\"ref16\" id=\"context_ref_16_1a\">[16]</a>. Modesti et al. proved security goals for the Bitcoin payment protocol <a ref-type=\"bibr\" anchor=\"ref17\" id=\"context_ref_17_1a\">[17]</a>. Hirai et al. <a ref-type=\"bibr\" anchor=\"ref18\" id=\"context_ref_18_1a\">[18]</a>, Amani et al. <a ref-type=\"bibr\" anchor=\"ref19\" id=\"context_ref_19_1a\">[19]</a>, Nam et al. <a ref-type=\"bibr\" anchor=\"ref20\" id=\"context_ref_20_1a\">[20]</a>, and Yang et al. <a ref-type=\"bibr\" anchor=\"ref21\" id=\"context_ref_21_1a\">[21]</a> focused on the formal analysis of Ethereum smart contracts. Arapinis et al. <a ref-type=\"bibr\" anchor=\"ref22\" id=\"context_ref_22_1a\">[22]</a> and Das et al. <a ref-type=\"bibr\" anchor=\"ref23\" id=\"context_ref_23_1a\">[23]</a> provided the modelling and verification of cryptocurrency wallets.<div class=\"figure figure-full table\" id=\"table1\"><div class=\"figcaption\"><b class=\"title\">TABLE 1 </b>\nRelated Works of Blockchain Formalization</div><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t1-3228109-large.gif\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t1-3228109-small.gif\" alt=\"Table 1- &#10;Related Works of Blockchain Formalization\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div></div></p><p>With the symbolic settings and advanced verification tools, some researchers have formally verified hundreds of protocols <a ref-type=\"bibr\" anchor=\"ref24\" id=\"context_ref_24_1a\">[24]</a>, including major deployed protocols such as FIDO UAF protocol <a ref-type=\"bibr\" anchor=\"ref25\" id=\"context_ref_25_1a\">[25]</a>, TLS protocol <a ref-type=\"bibr\" anchor=\"ref26\" id=\"context_ref_26_1a\">[26]</a>, 5G authentication protocol <a ref-type=\"bibr\" anchor=\"ref27\" id=\"context_ref_27_1a\">[27]</a>, noise protocols <a ref-type=\"bibr\" anchor=\"ref28\" id=\"context_ref_28_1a\">[28]</a>, e-voting protocols <a ref-type=\"bibr\" anchor=\"ref29\" id=\"context_ref_29_1a\">[29]</a>, authentication and key agreement protocol, e-cash protocols <a ref-type=\"bibr\" anchor=\"ref30\" id=\"context_ref_30_1a\">[30]</a>, etc. They have proved the advantages of discovering protocol vulnerabilities with faithful symbolic models and advanced verification tools <a ref-type=\"bibr\" anchor=\"ref13\" id=\"context_ref_13_1a\">[13]</a>, <a ref-type=\"bibr\" anchor=\"ref24\" id=\"context_ref_24_1a\">[24]</a>, <a ref-type=\"bibr\" anchor=\"ref31\" id=\"context_ref_31_1a\">[31]</a>. The revenue stealing attack of Bitcoin was discovered in our previous work <a ref-type=\"bibr\" anchor=\"ref16\" id=\"context_ref_16_1a\">[16]</a>, which proposed the symbolic model of Bitcoin core protocols. However, the advanced verification tools provide limited support for efficient reasoning when the symbolic model has a huge state size and advanced algebraic properties. Therefore, the pragmatic balance of the model comprehensiveness and complexity is required by the convincing and efficient formal verification.</p></div><div class=\"section_2\" id=\"sec1b\"><h3>B. Challenges and Contributions</h3><p>This work proposes a tool-friendly symbolic model for the Bitcoin-compatible mixing protocol and provides machine-verified proof for the security of the Bitcoin mixing service. We introduce the formalization details of Blindcoin protocol and discuss the generalization of the proposed formal model.</p><p>Blindcoin is built upon Bitcoin, and the modeling of Blindcoin requires the analysis of a huge amount of Bitcoin codes and documents. To achieve comprehensive formalization, the modeling requires considerable interpretation of codes and documents to cover the entity interactions of multiple Bitcoin layers and capture the semantics of structural transactions, growing blockchain and Blindcoin mixing service. Due to the implicit security settings of Blindcoin, we should consider all the possible scenarios with proper security assumptions, and fine-grained formalize the required security properties of mixing service, including the authentication, accountability, anonymity, and balance consistency. To capture the features of Bitcoin-compatible mixing protocols, we should model the sophisticated Blindcoin operation with the standard cryptographic primitives <a ref-type=\"bibr\" anchor=\"ref32\" id=\"context_ref_32_1b\">[32]</a>. At the same time, the Bitcoin-compatible mixing protocols have plenty of entity interactions and complex state transitions. An automatic and efficient model reasoning of these protocols is outside the scope of state-of-the-art verification techniques and tools, let alone manual reasoning, as the number of interactions is too large to explore <a ref-type=\"bibr\" anchor=\"ref27\" id=\"context_ref_27_1b\">[27]</a>. With a pragmatic balance of model complexity, we give special treats for cryptographic interactions, concurrent sessions, and dynamic blockchain to realize efficient reasoning. We faithfully verify Blindcoin\u2019s security and efficiently detect its vulnerabilities with machine-proofs.</p><p>To our knowledge, this paper is the first work that provides a faithful and comprehensive formal model for the Bitcoin mixing service. The proofs of the violated Blindcoin properties and the detected Blindcoin vulnerabilities show the comprehensiveness and efficiency of our modeling. The main contributions of this work are summarized as follows:\n<ul style=\"list-style-type:disc\"><li><p>We formalize all sorts of security properties of Bitcoin-compatible mixing services, including authentication, accountability, privacy, and balance consistency, while no previous work provides the fine-grained formalization.</p></li><li><p>We propose an efficient and reliable formalization that balances the model\u2019s complexity and comprehensiveness. Experimental results show that the proposed model is sufficient for automation capability and can verify the target lemmas in an efficient way.</p></li><li><p>Model verification results disclose the previously found attacks and the newly detected vulnerabilities. To this end, we extract the real-world security scenarios of Blindcoin and explicitly capture the multi-layers semantics of Bitcoin and the features of Blindcoin.</p></li><li><p>The proposed model definitions are easy to be expanded to other Bitcoin-compatible mixing protocols. Moreover, we use the Coinswap protocol as an example to introduce how to expand the proposed model.</p></li></ul></p></div><div class=\"section_2\" id=\"sec1c\"><h3>C. Organization</h3><p>The rest of this paper is organized as follows. <a ref-type=\"sec\" anchor=\"sec2\" class=\"fulltext-link\">Section II</a> introduces the overview of the Blindcoin protocol, <a ref-type=\"sec\" anchor=\"sec3\" class=\"fulltext-link\">Section III</a> presents the formalization of security goals, <a ref-type=\"sec\" anchor=\"sec4\" class=\"fulltext-link\">Section IV</a> presents the model restrictions and security assumptions, and <a ref-type=\"sec\" anchor=\"sec5\" class=\"fulltext-link\">Section V</a> introduces formalization of state transition. Verification results are reported in <a ref-type=\"sec\" anchor=\"sec6\" class=\"fulltext-link\">Section VI</a>. Finally, discussion is given in <a ref-type=\"sec\" anchor=\"sec7\" class=\"fulltext-link\">Section VII</a> and conclusion is drawn in <a ref-type=\"sec\" anchor=\"sec8\" class=\"fulltext-link\">Section VIII</a>.</p></div></div>\n<div class=\"section\" id=\"sec2\"><div class=\"header article-hdr\"><div class=\"kicker\">\n\t\t                        SECTION II.</div><h2>Overview of the Blindcoin Protocol</h2></div><div class=\"section_2\" id=\"sec2a\"><h3>A. Architecture</h3><p>The Blindcoin protocol architecture, entities and communications are shown in <a ref-type=\"fig\" anchor=\"fig1\" class=\"fulltext-link\">Figure 1</a>. The coin sender initializes the Blindcoin protocol and sends the Blindcoin offer, pays to the escrow address of the middle mix, and unblinds the address of the coin receiver. The middle mix handles the Blindcoin offer, sends the Blindcoin partial warranty, completes the Blindcoin warranty, and transfers Bitcoin to the address of the coin receiver. The coin receiver receives the Bitcoin that is transferred anonymously if the protocol executes successfully. P2P Network relays the Blindcoin traffic, Bitcoin blockchain records the Bitcoin transaction, and the bulletin board publishes the Blindcoin partial warranty and warranty. Due to the openness of Bitcoin, any protocol entity of Blindcoin can be the attacker.\n<div class=\"figure figure-full\" id=\"fig1\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu1-3228109-large.gif\" data-fig-id=\"fig1\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu1-3228109-small.gif\" alt=\"FIGURE 1. - Blindcoin protocol architecture, entities and communications.\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\">FIGURE 1. </b><fig><p>Blindcoin protocol architecture, entities and communications.</p></fig></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p></div><div class=\"section_2\" id=\"sec2b\"><h3>B. Protocol Procedures</h3><p><a ref-type=\"fig\" anchor=\"fig2\" class=\"fulltext-link\">Figure 2</a> illustrates the Blindcoin protocol procedures. Blindcoin protocol execution requires the public log supported by the P2P network, Blockchain, and the bulletin board. In protocol initialization, the Blindcoin middle mix announces mix parameter <monospace>D</monospace>, and the coin sender gets <monospace>D</monospace> from the bulletin board. Then, the coin sender generates its Blindcoin offer <monospace>T=&lt;<inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{K}}_{out}$\n</tex-math></inline-formula>,n&gt;</monospace>, where <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{K}}_{out}$\n</tex-math></inline-formula></monospace> is the address of the coin receiver and <monospace>n</monospace> is the user parameter to decide the randomized mix fees. Upon the Blindcoin offer is generated, the coin sender communicates with the middle mix with the parameter <monospace>D</monospace> and the blinded address <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{A}}_{C}$\n</tex-math></inline-formula>(T)</monospace> to the middle mix, where <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{A}}_{C}$\n</tex-math></inline-formula></monospace> is the blinding function. The unblinding function is <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\text{A}_{C'}$\n</tex-math></inline-formula></monospace>, the equation <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\text{A}_{C'}$\n</tex-math></inline-formula>(S(<inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{A}}_{C}$\n</tex-math></inline-formula>(x)))=S(x)</monospace> is satisfied, and <monospace>S(x)</monospace> is the signature of message <monospace>x</monospace>. After receiving the mix parameter <monospace>D</monospace> and the blinded address <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{A}}_{C}$\n</tex-math></inline-formula>(T)</monospace>, the middle mix returns a partial warranty <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{S}}_{M}$\n</tex-math></inline-formula>(<inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{A}}_{C}$\n</tex-math></inline-formula>(T),<inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{K}}_{esc}$\n</tex-math></inline-formula>,D)</monospace>, where <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{K}}_{esc}$\n</tex-math></inline-formula></monospace> is an escrow address for the middle mix to receive payment and <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{S}}_{M}$\n</tex-math></inline-formula></monospace> is the mix\u2019s signature.\n<div class=\"figure figure-full\" id=\"fig2\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu2-3228109-large.gif\" data-fig-id=\"fig2\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu2-3228109-small.gif\" alt=\"FIGURE 2. - Protocol procedures of Blindcoin.\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\">FIGURE 2. </b><fig><p>Protocol procedures of Blindcoin.</p></fig></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p><p>To pay to the escrow address <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{K}}_{esc}$\n</tex-math></inline-formula></monospace>, the coin sender publish transaction <monospace>Tx(<inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{K}}_{in}$\n</tex-math></inline-formula>,<inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{K}}_{esc}$\n</tex-math></inline-formula>)</monospace> to transfer Bitcoin from the coin sender\u2019s address <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{K}}_{in}$\n</tex-math></inline-formula></monospace> to <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{K}}_{esc}$\n</tex-math></inline-formula></monospace>. Then, the transaction is verified by P2P network, the Bitcoin blockchain confirms the transaction <monospace>Tx(<inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{K}}_{in}$\n</tex-math></inline-formula>,<inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{K}}_{esc}$\n</tex-math></inline-formula>)</monospace> and the Bitcoin balance of the two address is updated. After the escrow address <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{K}}_{esc}$\n</tex-math></inline-formula></monospace> receives Bitcoin, the middle mix computes the warranty <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{S}}_{M}$\n</tex-math></inline-formula>(<inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{A}}_{C}$\n</tex-math></inline-formula>(T))</monospace> and posts it to the bulletin board. Upon the bulletin board publishes the warranty to the public, the coin sender unblinds the warranty with the unblinding function <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\text{A}_{C'}$\n</tex-math></inline-formula></monospace> to get the mix\u2019s signature <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{S}}_{M}$\n</tex-math></inline-formula>(T)</monospace>, which is posted to the bulletin board along with the Blindcoin offer <monospace>T=&lt;<inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{K}}_{out}$\n</tex-math></inline-formula>,n&gt;</monospace>. After the bulletin board publishes the Blindcoin offer, the middle mix transfers Bitcoin from its escrow address <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\text{K}_{esc'}$\n</tex-math></inline-formula></monospace> to the unblinded address <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{K}}_{out}$\n</tex-math></inline-formula></monospace>, namely Bitcoin transaction <monospace>Tx(<inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\text{K}_{esc'}$\n</tex-math></inline-formula>,<inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{K}}_{out}$\n</tex-math></inline-formula>)</monospace>. Upon Bitcoin transaction is published, the P2P network verifies the transaction, the blockchain confirms this transaction <monospace>Tx(<inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\text{K}_{esc'}$\n</tex-math></inline-formula>,<inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{K}}_{out}$\n</tex-math></inline-formula>)</monospace>, and the Bitcoin balance of the two address is updated.</p></div></div>\n<div class=\"section\" id=\"sec3\"><div class=\"header article-hdr\"><div class=\"kicker\">\n\t\t                        SECTION III.</div><h2>Assumptions and Threat Model</h2></div><p>We use the Dolev-Yao adversary as our basic threat model, in which the Blindcoin attackers have the ability to read, modify, intercept, and inject any message communicated in the Bitcoin network. And in the specified security scenarios, we need to endow more abilities to Blindcoin attackers or remove some abilities from Blindcoin attackers. The assumptions of Blindcoin\u2019s adversary abilities are stated below.</p><div class=\"section_2\" id=\"sec3a\"><h3>A. Assumptions on Cryptographic Primitives</h3><p>Corresponding with the Dolev-Yao adversary, we assume that only the one with the private key can recover the encrypted message and create the corresponding signature. The attacker cannot destroy the security of the cryptographic primitives.</p></div><div class=\"section_2\" id=\"sec3b\"><h3>B. Assumptions on Entities and Channels</h3><div class=\"section_2\" id=\"sec3b1\"><h4>1) Honest P2P Network</h4><p>If the honest blockchain nodes are the majority, it means the P2P network is honest. In the scenario of the honest P2P network, we assume that the attacker cannot modify, intercept, and inject the message sent by the P2P network. It means we need to remove the corresponding ability of Blindcoin attackers by defining the authentication channel for the P2P network. The model rules to define the authentication channel are stated in <a ref-type=\"sec\" anchor=\"sec5c\" class=\"fulltext-link\">Section V.C</a>. The attacker cannot initiate or respond to the communication as the role of the P2P network. Since blockchain traffic is open-access, we assume that the attacker can eavesdrop on the communication between the coin sender, the P2P network, and the middle mix. The honest P2P network is assumed to guarantee the growth of blockchain and only accept the transaction that transfers the unspent Bitcoin. It means we need to remove the corresponding ability of Blindcoin attackers by defining the restrictions for blockchain growth and transaction confirmation. The related model restrictions are stated in <a ref-type=\"sec\" anchor=\"sec3d\" class=\"fulltext-link\">Section III.D</a>.</p></div><div class=\"section_2\" id=\"sec3b2\"><h4>2) Dishonest P2P Network</h4><p>If the dishonest blockchain nodes are the majority, it means the P2P network is dishonest. In the scenario of the dishonest network, we assume that the attacker not only can intercept and manipulate the message sent by the P2P network but also can initiate and respond to the communication as the role of the P2P network. The attacker can eavesdrop on the communication between the coin sender, the P2P network, and the middle mix. If the blockchain fork appears, the dishonest P2P network allows the chain length to decrease and the transaction that transfers the spent Bitcoin. It means we remove the model restrictions of blockchain growth and transaction confirmation stated in <a ref-type=\"sec\" anchor=\"sec3d\" class=\"fulltext-link\">Section III.D</a>.</p></div><div class=\"section_2\" id=\"sec3b3\"><h4>3) Lazy Middle Mix</h4><p>If the middle mix does not check the uniqueness of the escrow address, it means the middle mix is lazy. In the scenario of the lazy middle mix, we assume that the lazy middle mix stores its private key securely. The attacker cannot modify, intercept, or inject the message sent by the lazy middle mix. So we need to remove the corresponding ability of Blindcoin attacker to control the message of the lazy middle mix by applying the authentication channel stated in <a ref-type=\"sec\" anchor=\"sec5c\" class=\"fulltext-link\">Section V.C</a>. The attacker can eavesdrop on the communication between the P2P network and the lazy middle mix. We assume that the lazy middle mix stores its private key securely. The attacker cannot initiate or respond to the communication as the role of the lazy middle mix. It means the Blindcoin attacker cannot get the private key of the lazy middle mix and we apply the restriction on the lazy middle mix\u2019s private key. We assume the lazy middle mix allows the same escrow address to receive the Bitcoin. It means we remove the restriction on the escrow address uniqueness and the attacker can replay the same escrow address to the lazy middle mix.</p></div><div class=\"section_2\" id=\"sec3b4\"><h4>4) Unlazy Middle Mix</h4><p>If the middle mix checks the uniqueness of the escrow address, it means the middle mix is unlazy. In the scenario of the unlazy middle mix, we assume that the unlazy middle mix stores its private key securely. The attacker cannot intercept and manipulate the message sent by the unlazy middle mix. So we also need to remove the corresponding ability of Blindcoin attacker to control the message of the unlazy middle mix by applying the authentication channel stated in <a ref-type=\"sec\" anchor=\"sec5c\" class=\"fulltext-link\">Section V.C</a>. The attacker can eavesdrop on the communication between the P2P network and the unlazy middle mix. We assume that the unlazy middle mix stores its private key securely. The attacker cannot initiate or respond to the communication as the role of the unlazy middle mix. It means the Blindcoin attacker cannot get the private key of the unlazy middle mix and we apply the restriction on the private key secrecy of the unlazy middle mix. We assume the unlazy middle mix does not allow the same escrow address to receive the Bitcoin. It means we apply the restriction on the escrow address uniqueness and the attacker cannot replay the same escrow address to the lazy middle mix.</p></div><div class=\"section_2\" id=\"sec3b5\"><h4>5) Lazy Coin Sender</h4><p>If the coin sender does not guarantee the uniqueness of its account address that transfers different Bitcoin, it means the coin sender is lazy. In the scenario of the lazy coin sender, we assume that the lazy coin sender stores its private key securely. The attacker cannot intercept and manipulate the message sent by the lazy coin sender. So we apply the authentication channel stated in <a ref-type=\"sec\" anchor=\"sec5c\" class=\"fulltext-link\">Section V.C</a>. to remove the corresponding ability of Blindcoin attacker to control the message of lazy coin sender. The attacker can eavesdrop on the communication between the P2P network and the lazy coin sender. The attacker cannot initiate or respond to the communication as the role of the lazy coin sender. It means the Blindcoin attacker cannot get the private key of the lazy coin sender and we apply the restriction on the private key secrecy of the lazy coin sender. We assume the lazy coin sender allows the same Bitcoin account address to transfer different Bitcoin. It means we remove the restriction on the Bitcoin account address uniqueness and the attacker can replay the same escrow address to the lazy coin sender.</p></div><div class=\"section_2\" id=\"sec3b6\"><h4>6) Unlazy Coin Sender</h4><p>If the coin sender guarantees the uniqueness of its account address that transfers different Bitcoin, it means the coin sender is unlazy. In the scenario of the unlazy coin sender, we assume that the unlazy coin sender stores its private key securely. The attacker cannot intercept and manipulate the message sent by the unlazy coin sender. So we also apply the authentication channel stated in <a ref-type=\"sec\" anchor=\"sec5c\" class=\"fulltext-link\">Section V.C</a>. to remove the corresponding ability of Blindcoin attacker to control the message of unlazy coin sender. The attacker can eavesdrop on the communication between the P2P network and the unlazy coin sender. The attacker cannot initiate or respond to the communication as the role of the unlazy coin sender. It means the Blindcoin attacker cannot get the private key of the unlazy coin sender and we apply the restriction on the private key privacy of the unlazy coin sender. We assume the unlazy coin sender does not allow the same Bitcoin account address to transfer different Bitcoin. So we apply the restriction on the Bitcoin account address uniqueness and the attacker cannot replay the same escrow address to the lazy coin sender.</p></div><div class=\"section_2\" id=\"sec3b7\"><h4>7) Malicious Participant</h4><p>If the attacker plays one of the roles of the Blindcoin entities, the entity that the attacker acts as is malicious, which can be the malicious coin sender and the malicious middle mix. In the scenario of the malicious coin sender, we assume that the malicious coin sender reveals its private key to the attacker. It means the Blindcoin attacker can get the private key of the malicious coin sender. Therefore, in the protocol initialization, we define the model rule to reveal the private key of the coin sender and we remove the restriction on the private key secrecy of the coin sender. In the scenario of the malicious middle mix, we assume that the malicious middle mix reveals its private key to the attacker. It means the Blindcoin attacker can get the private key of the malicious middle mix. So, in the protocol initialization, we define the model rule to reveal the private key of the middle mix and we remove the restriction on the private key secrecy of the middle mix. The attacker can intercept and manipulate the message sent by the malicious participant. The attacker can eavesdrop on the communication of the malicious participant. The attacker can initiate or respond to the communication as the role of the malicious participant.</p></div></div><div class=\"section_2\" id=\"sec3c\"><h3>C. Assumptions on Data Protections</h3><p>In our modeling, the attacker has the knowledge of the data fields of blockchain identification, the current block height, the previous transaction id of the Bitcoin, the input script with signature to unlock the previous transaction, the current transaction id to transfer the unlocked Bitcoin, the output script with the public key to lock current transaction, the partial warranty, and the completed warranty. We assume the data fields of the mix parameters and the required block periods of different protocol instances as the same that the attacker cannot distinguish. We verify if the security properties of Blindcoin hold when the relationship between the coin sender and the blinded address is compromised or leaked. We assume the adapted randomness to generate the blinded address is not guessable and the attacker has no knowledge of the adapted randomness. The attacker can monitor the activities of the coin sender and cannot guess the unused account address of the coin sender. The attacker can collect the published escrow address of the middle mix and cannot guess the future escrow address to be used. We assume the private key of the honest participants is secret when protocol starts.</p></div><div class=\"section_2\" id=\"sec3d\"><h3>D. Model Restrictions</h3><p>We define and apply model restrictions for different Blindcoin security scenarios and blockchain semantics. The restrictions are introduced below, and the term specified in the restrictions are introduced in <a ref-type=\"sec\" anchor=\"sec5\" class=\"fulltext-link\">Section V</a>.</p><p>The asynchronous nature of Bitcoin transaction confirmation results in ambiguous blockchain updating <a ref-type=\"bibr\" anchor=\"ref33\" id=\"context_ref_33_3d\">[33]</a> and blockchain forking <a ref-type=\"bibr\" anchor=\"ref34\" id=\"context_ref_34_3d\">[34]</a>. To model the scenario of the honest P2P network, restriction <monospace>NoDoubleSpending</monospace> is specified to prevent the transaction that transfers the spent Bitcoin. It ensures the transaction that transfers bitcoin from <monospace>x</monospace> to <monospace>a</monospace>, and the transaction transferring bitcoin from <monospace>x</monospace> to <monospace>b</monospace> cannot be both confirmed and recorded. Restriction <monospace>OneChain</monospace> is specified to eliminate cross-chain transactions and only one blockchain is initialized. It can be removed if we expand our model to verify the mixing protocol provides cross-chain service. Restriction <monospace>LedgerHeight</monospace> is specified to limit the longest chain length and prevent the unstopping of the model reasoning. Restriction <monospace>LowerThan</monospace> is specified to guarantee the growth of the Bitcoin blockchain. It ensures the tail block of the blockchain has a lower block height than the newly generated block. Restriction <monospace>Equality</monospace> and <monospace>InEquality</monospace> are specified for the transaction unlocking to check the signature validity check.</p><p>To model the security scenarios of the unlazy middle mix restriction <monospace>UniqueX</monospace> is applied and term <monospace>x</monospace> in action <monospace>Unique(x)</monospace> represent the escrow address used by the middle mix. It ensures the escrow address only appears in one mixing offer during protocol execution. To model the security scenarios of the unlazy coin sender, restriction <monospace>UniqueX</monospace> is applied and term <monospace>x</monospace> in action <monospace>Unique(x)</monospace> represent the account address used by the coin sender. It ensures the account address of coin sender appears only once in Bitcoin transaction input script during protocol execution. For the security scenarios of the honest Blindcoin entity, the restriction <monospace>No_keyReveal</monospace> is specified to limit the private key of the honest entity to be secure and unknown to the attacker. Moreover, to model the scenario of the honest coin sender, restriction <monospace>Spendable</monospace> is specified to limit that a Bitcoin is locked before it becomes spendable. It ensures that the coin sender cannot lock a spendable Bitcoin in the previous transaction again.</p><p>At the same time, the defined model restrictions can not only fit each considered security scenario but also reduce the space size of the model state to exploit Bitcoin blockchain semantics and get the security proofs. The open-access blockchain records enlarge the state space size of the Blindcoin model and increase the difficulty of trace guarding to achieve model verification. These restrictions restrict the considered transition traces in the protocol analysis and reduced the space size of trace exploration to balance the model complexity and the reasoning efficiency of Blindcoin security verification.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu20-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu20-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu21-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu21-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p></div></div>\n<div class=\"section\" id=\"sec4\"><div class=\"header article-hdr\"><div class=\"kicker\">\n\t\t                        SECTION IV.</div><h2>Formalization of Security Goals</h2></div><p>In this section, we fine-grained formalize the security goals of Bitcoin mixing services and provide the definitions of authentication property, accountability property, anonymity property, and balance consistency property required by the Blindcoin protocol. There is a formal relationship between the definitions of these security properties and their mathematical definitions will be encoded as our model lemmas <a ref-type=\"bibr\" anchor=\"ref27\" id=\"context_ref_27_4\">[27]</a>.</p><p>Here, we present our definition of Blindcoin security properties along with the corresponding mathematical definitions of Blindcoin security properties. The encoded model lemmas are presented in <a ref-type=\"sec\" anchor=\"sec4e\" class=\"fulltext-link\">Section IV.E</a>. The fact term meanings in our mathematical formulas are introduced in <a ref-type=\"sec\" anchor=\"sec5\" class=\"fulltext-link\">Section V</a>. The symbol <monospace>#</monospace> in our mathematical formulas denotes the temporal variables. The symbol <monospace>@</monospace> in our mathematical formulas is the sort prefix for the temporal variables and works for the action constraints.</p><div class=\"section_2\" id=\"sec4a\"><h3>A. Authentication Property</h3><p>Blindcoin makes informal claims about authentication properties in its paper. This work formally defines the Blindcoin authentication based on Lowe\u2019s taxonomy of authentication properties <a ref-type=\"bibr\" anchor=\"ref35\" id=\"context_ref_35_4a\">[35]</a> to clarify the ambiguity of Blindcoin authentication and cover the security requirements of data exchange in the Blindcoin protocol. To achieve the fine-grained formalization, we specify two levels of Blindcoin authentication: <i>Non-injective Agreement</i> and <i>Injective agreement</i>.</p><p><div class=\"section_2\" id=\"definition1\"><h4>Definition 1:</h4><p>Given the protocol instance with the middle mix, entity <monospace>a</monospace> with role <monospace>A</monospace> and entity <monospace>b</monospace> with role <monospace>B</monospace>, if the Blindcoin protocol ensures <b>Non-injective Agreement</b>, we have that if, whenever data exchange initiator <monospace>A</monospace> completes the exchange of data <monospace>ts</monospace> apparently with data exchange responder <monospace>B</monospace>, then <monospace>B</monospace> has previously been running the protocol apparently with A, and the two agents agreed on the data values corresponding to all the variables in <monospace>ts</monospace>.</p></div></p><div class=\"section_2\" id=\"sec4a1\"><h4>1) Non-Injective Agreement on Blindcoin Offer Between the Coin Sender and the Middle Mix</h4><p>First, the coin sender must have the assurance that whenever it completes the data exchange of Blindcoin offer apparently with the middle mix, then the middle mix has previously been running the protocol apparently with the coin sender, and they agreed on the data values of Blindcoin offer. The following formula is specified for the <i>Non-injective Agreement</i> on Blindcoin offer between coin sender and the middle mix, where <monospace>a</monospace> and <monospace>b</monospace> are the Blindcoin entity names of the role coin sender <monospace>\u2019CS\u2019</monospace> and the role middle mix <monospace>\u2019Mix\u2019</monospace>, <monospace>i</monospace> and <monospace>j</monospace> denote the appearance time of claim actions, and <monospace>ts</monospace> represents the terms of Blindcoin offer.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu22-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu22-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p></div><div class=\"section_2\" id=\"sec4a2\"><h4>2) Non-Injective Agreement on Blindcoin Escrow Address Between the Middle Mix and Coin Sender</h4><p>The middle mix must have the assurance that whenever it completes the data exchange of Blindcoin escrow address apparently with the coin sender, then the coin sender has previously been running the protocol apparently with the middle mix, and they agreed on the data values of Blindcoin escrow address. The following formula is specified for the <i>Non-injective Agreement</i> on Blindcoin escrow address between the middle mix and coin sender, where <monospace>a</monospace> and <monospace>b</monospace> are the Blindcoin entity names of the role middle mix <monospace>\u2019Mix\u2019</monospace> and the role coin sender <monospace>\u2019CS\u2019</monospace>, <monospace>i</monospace> and <monospace>j</monospace> and <monospace>i2</monospace> denote the appearance time of claim actions, and <monospace>ts</monospace> represents the terms of Blindcoin escrow address.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu23-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu23-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p></div><div class=\"section_2\" id=\"sec4a3\"><h4>3) Non-Injective Agreement on Blindcoin Destination Address Between the Coin Sender and the Middle Mix</h4><p>The coin sender must have the assurance that whenever it completes the data exchange of Blindcoin destination address apparently with the middle mix, then the middle mix has previously been running the protocol apparently with the coin sender, and they agreed on the data values of Blindcoin destination address. The following formula is specified for the <i>Non-injective Agreement</i> on Blindcoin destination address between the coin sender and the middle mix, where <monospace>a</monospace> and <monospace>b</monospace> are the Blindcoin entity names of the role coin sender <monospace>\u2019CS\u2019</monospace> and the role middle mix <monospace>\u2019Mix\u2019</monospace>, <monospace>i</monospace> and <monospace>j</monospace> denote the appearance time of claim actions, and <monospace>ts</monospace> represents the terms of Blindcoin destination.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu24-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu24-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p><p><div class=\"section_2\" id=\"definition2\"><h4>Definition 2:</h4><p>If Blindcoin ensures <b>Injective Agreement</b> for any protocol instance with the middle mix to blind Bitcoin transaction, any entity <monospace>a</monospace> with role <monospace>A</monospace> and any entity <monospace>b</monospace> with role <monospace>B</monospace>, we have that if, whenever data exchange initiator <monospace>A</monospace> completes the exchange of data <monospace>ts</monospace> apparently with data exchange responder <monospace>B</monospace>, then <monospace>B</monospace> has previously been running the protocol apparently with <monospace>A</monospace>, and the two agents agreed on the data values corresponding to all the variables in <monospace>ts</monospace>, and for each data exchange of <monospace>ts</monospace> initialized by <monospace>A</monospace>, there is a unique matching data exchange of <monospace>B</monospace>.</p></div></p></div><div class=\"section_2\" id=\"sec4a4\"><h4>4) Injective Agreement on Blindcoin Offer Between the Coin Sender and the Middle Mix</h4><p>First, the coin sender must have the assurance that whenever it completes the data exchange of Blindcoin offer apparently with the middle mix, then the middle mix has previously been running the protocol apparently with the coin sender, and they agreed on the data values of Blindcoin offer, and there is a unique matching data exchange of the middle mix for each data exchange of Blindcoin offer initialized by the coin sender. The following formula is specified for the <i>Injective Agreement</i> of Blindcoin offer between coin sender and the middle mix, where <monospace>a</monospace> and <monospace>b</monospace> are the Blindcoin entity names of the role coin sender <monospace>\u2019CS\u2019</monospace> and the role middle mix <monospace>\u2019Mix\u2019</monospace>, <monospace>i</monospace> and <monospace>j</monospace> and <monospace>i2</monospace> denote the appearance time of claim actions, and <monospace>ts</monospace> represents the terms of Blindcoin offer.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu25-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu25-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p></div><div class=\"section_2\" id=\"sec4a5\"><h4>5) Injective Agreement on Blindcoin Escrow Address Between the Middle Mix and Coin Sender</h4><p>The middle mix must have the assurance that whenever it completes the data exchange of Blindcoin escrow address apparently with the coin sender, then the coin sender has previously been running the protocol apparently with the middle mix, and they agreed on the data values of Blindcoin escrow address, and there is a unique matching data exchange of the coin sender for each data exchange of Blindcoin escrow address initialized by the middle mix. The following formula is specified for the <i>Injective Agreement</i> of Blindcoin escrow address between the middle mix and coin sender, where <monospace>a</monospace> and <monospace>b</monospace> are the Blindcoin entity names of the role middle mix <monospace>\u2019Mix\u2019</monospace> and the role coin sender <monospace>\u2019CS\u2019</monospace>, <monospace>i</monospace> and <monospace>j</monospace> and <monospace>i2</monospace> denote the appearance time of claim actions, and <monospace>ts</monospace> represents the terms of Blindcoin escrow address.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu26-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu26-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p></div><div class=\"section_2\" id=\"sec4a6\"><h4>6) Injective Agreement on Blindcoin Destination Address Between the Coin Sender and the Middle Mix</h4><p>The coin sender must have the assurance that whenever it completes the data exchange of Blindcoin destination address apparently with the middle mix, then the middle mix has previously been running the protocol apparently with the coin sender, and they agreed on the data values of Blindcoin destination address, and there is a unique matching data exchange of the middle mix for each data exchange of Blindcoin destination address initialized by the coin sender. The following formula is specified for the <i>Injective Agreement</i> of Blindcoin destination address between the middle mix and coin sender, where <monospace>a</monospace> and <monospace>b</monospace> are the Blindcoin entity names of the role coin sender <monospace>\u2019CS\u2019</monospace> and the role middle mix <monospace>\u2019Mix\u2019</monospace>, <monospace>i</monospace> and <monospace>j</monospace> and <monospace>i2</monospace> denote the appearance time of claim actions, and <monospace>ts</monospace> represents the terms of Blindcoin destination.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu27-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu27-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p></div></div><div class=\"section_2\" id=\"sec4b\"><h3>B. Accountability Property</h3><p>Blindcoin provides the informal claims of accountability in its paper. Based on Blindcoin\u2019s judgment of whether the entity should be blamed, we define <i>Judging Procedures</i> for Blindcoin protocol. The defined <i>Judging Procedures</i> should rely only on the open-access and tamper-resistant data on the bulletin board so that any mixing entity and the external auditor can run the procedures. To formally verify whether Blindcoin can identify the malicious entity individually, we define the <i>individual accountability</i> motivated by <a ref-type=\"bibr\" anchor=\"ref36\" id=\"context_ref_36_4b\">[36]</a>.</p><p><div class=\"section_2\" id=\"definition3\"><h4>Definition 3:</h4><p>The <b>Judging Procedures</b> of Blindcoin are defined as the following procedures, where <monospace>A</monospace> represents the coin sender, <monospace>B</monospace> represents the coin receiver, and <monospace>M</monospace> represents the middle mix.\n<ol><li><p>If the account value of the first escrow address <monospace>x</monospace> does not increase when expected, then the coin sender <monospace>A</monospace> is judged as malicious because <monospace>A</monospace> does not claim the transaction to pay for the middle mix <monospace>M</monospace> who uses the first escrow address to receive payment.</p></li><li><p>If the destination cannot be blinded by the coin sender <monospace>A</monospace> when expected, then <monospace>A</monospace> publishes the partial warranty and the middle mix <monospace>M</monospace> is judged as malicious because <monospace>M</monospace> refuses to sign and claim the correct warranty.</p></li><li><p>If the destination cannot be paid by the middle mix <monospace>M</monospace> when expected due to the invalid warranty, the coin sender <monospace>A</monospace> is judged as malicious because <monospace>A</monospace> refuses to unblind and claim the correct destination for <monospace>M</monospace>.</p></li><li><p>If the value of the coin receiver account, which is the destination, does not increase when expected, then the valid warranty claimed by <monospace>M</monospace> can be logged on the bulletin board and the middle mix <monospace>M</monospace> is judged as malicious because <monospace>M</monospace> refuses to claim the payment to the destination.</p></li></ol></p></div></p><p><div class=\"section_2\" id=\"definition4\"><h4>Definition 4:</h4><p>If the Blindcoin protocol ensures <b>Individual Accountability</b> for any Blindcoin protocol instance, we have that at least one malicious mixing entity can be blamed correctly and individually when protocol failure occurs, and the malicious entity is identified based on the <b>Judging Procedures</b>.</p></div></p><div class=\"section_2\" id=\"sec4b1\"><h4>1) Individual Accountability of the Malicious Coin Sender Who Does Not Claim the Transaction to Pay for the Middle Mix</h4><p>The malicious coin sender who does not claim the transaction to pay for the middle mix can be identified and no wrong identification when protocol failure occurs. The following formula is specified for the <i>individual accountability</i> of malicious coin sender <monospace>A</monospace> who sends the Blindcoin offer with blinded coin destination <monospace>b</monospace> and refuses to make payment to the middle mix <monospace>M</monospace> from the coin sender\u2019s address <inline-formula id=\"\"><tex-math notation=\"LaTeX\">${s}$\n</tex-math></inline-formula> to the middle mix\u2019s escrow address <monospace>pw</monospace>.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu28-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu28-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p></div><div class=\"section_2\" id=\"sec4b2\"><h4>2) Individual Accountability of the Malicious Middle Mix Who Refuses to Sign and Claim the Correct Warranty</h4><p>The malicious middle mix who refuses to sign and claim the correct warranty can be identified and no wrong identification when protocol failure occurs. The following formula is specified for the <i>individual accountability</i> of malicious middle mix <monospace>M</monospace> who received the payment from the coin sender <monospace>A</monospace> and refuses to sign the warranty <monospace>w</monospace>.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu29-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu29-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p></div><div class=\"section_2\" id=\"sec4b3\"><h4>3) Individual Accountability of the Malicious Coin Sender Who Refuses to Unblind and Claim the Correct Destination</h4><p>The malicious coin sender who refuses to unblind and claim the correct destination can be identified and no wrong identification when protocol failure occurs. The following formula is specified for the <i>individual accountability</i> of malicious coin sender <monospace>A</monospace> who get the warranty <monospace>w</monospace> from the middle mix <monospace>M</monospace> and refuses to unblind the coin destination <monospace>r</monospace>.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu30-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu30-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p></div><div class=\"section_2\" id=\"sec4b4\"><h4>4) Individual Accountability of the Malicious Middle Mix Who Refuses to Claim the Payment to the Destination</h4><p>The malicious middle mix who refuses to claim the payment to the destination can be identified and no wrong identification when protocol failure occurs. The following formula is specified for the <i>individual accountability</i> of malicious middle mix <monospace>M</monospace> who gets the unblinded destination <monospace>r</monospace> from the coin sender <monospace>A</monospace> and refuses to make a payment to the coin destination <monospace>r</monospace>.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu31-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu31-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p></div></div><div class=\"section_2\" id=\"sec4c\"><h3>C. Anonymity Property</h3><p>Blindcoin protocol informally declares its anonymity. To formalize the Blindcoin anonymity, this work defines <i>Secrecy</i> and <i>Unlinkable Coin Receiver</i> to specify the secrecy of address links and the unlinkability of the coin receiver.</p><p><div class=\"section_2\" id=\"definition5\"><h4>Definition 5:</h4><p>The Blindcoin protocol ensures <b>Secrecy</b>, if no other peers, including the middle mix, know the address links between the coin sender <monospace>s</monospace> and the coin receiver <monospace>r</monospace> for any protocol instance.</p></div></p><div class=\"section_2\" id=\"sec4c1\"><h4>1) Secret_Mappings</h4><p>There are no Bitcoin peers know the mapping between the coin sender account address and the Blindcoin destination address. The following formula is specified for the <i>Secret_Mappings</i>, where <monospace>A</monospace> is the coin sender who transfers Bitcoin from address <monospace>s</monospace> to address <monospace>r</monospace> secretly, and <inline-formula id=\"\"><tex-math notation=\"LaTeX\">${x}$\n</tex-math></inline-formula> is the middle address of the middle mix.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu32-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu32-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p><p><div class=\"section_2\" id=\"definition6\"><h4>Definition 6:</h4><p>The Blindcoin protocol ensures <b>Unlinkable Coin Receiver</b> if the attacker cannot distinguish the coin receiver from other peers for any protocol instance with the middle mix to blind Bitcoin transactions.</p></div></p></div><div class=\"section_2\" id=\"sec4c2\"><h4>2) Unlinkable Coin Receiver</h4><p>The attacker cannot distinguish the two systems with different coin receivers so that the coin sender transfers Bitcoin to the target destination address is unlinkable. To prove <i>Unlinkable Coin Receiver</i>, we consider two different instances of Blindcoin protocol using the operator <monospace>diff</monospace> to differ the key terms of the two instances to check the <i>Observational Equivalence</i> of Blindcoin protocol. <i>Observational Equivalence</i> has been proved to be an effective way to prove the privacy of cryptographic protocols. The detailed handling of our model to check the <i>Observational Equivalence</i> is shown by the explanation model rule <i>unblindReceiver_sync</i> in <a ref-type=\"sec\" anchor=\"sec5\" class=\"fulltext-link\">Section V</a>.</p></div></div><div class=\"section_2\" id=\"sec4d\"><h3>D. Balance Consistency Property</h3><p>For the asset-related protocols, it is required that one asset cannot be spent twice and the sum of the account balance should be consistent <a ref-type=\"bibr\" anchor=\"ref30\" id=\"context_ref_30_4d\">[30]</a>. To formalize the balance consistency property of Blindcoin protocol, this work defines <i>No Double Spending</i>, <i>Safe Transfer</i>, and <i>Safe Middle Mix</i>.</p><p><div class=\"section_2\" id=\"definition7\"><h4>Definition 7:</h4><p>The Blindcoin protocol ensures <b>No Double Spending</b> if any peer cannot spend one Bitcoin twice for any protocol instance.</p></div></p><div class=\"section_2\" id=\"sec4d1\"><h4>1) No Double Spending</h4><p>A Bitcoin locked in the previous transaction cannot be spent twice. The following formula is specified for the <i>no double spending</i>, where <monospace>BC</monospace> is the blockchain label, and <monospace>x</monospace> denotes one asset of an account, <inline-formula id=\"\"><tex-math notation=\"LaTeX\">${n}$\n</tex-math></inline-formula> and <monospace>m</monospace> are the destinations of the asset, <monospace>t1</monospace> and <monospace>t2</monospace> are the blockchain heights when the coin sender transferred the asset.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu33-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu33-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p><p><div class=\"section_2\" id=\"definition8\"><h4>Definition 8:</h4><p>The Blindcoin protocol ensures <b>Safe Transfer</b> if there is one Bitcoin sent by coin sender <monospace>s</monospace>, there must be one Bitcoin received by coin receiver <monospace>r</monospace> for any protocol instance with the middle mix.</p></div></p></div><div class=\"section_2\" id=\"sec4d2\"><h4>2) Safe Transfer</h4><p>There is only one trace of the account balance increase of the coin receiver that corresponds with the account balance decrease of the coin sender so that the Bitcoin transfer is safe for the coin sender and the coin receiver. The following formula is specified for the <i>safe transfer</i>, where <monospace>A</monospace> denotes coin sender with account <monospace>s</monospace> whose account balance decreases when the balance of account <monospace>x</monospace> increases, and <monospace>r</monospace> denotes coin destination whose account balance increases when the balance of account <monospace>y</monospace> (<monospace>z</monospace>) decreases.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu34-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu34-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p><p><div class=\"section_2\" id=\"definition9\"><h4>Definition 9:</h4><p>The Blindcoin protocol ensures <b>Safe Middle Mix</b> if the middle mix spends one Bitcoin during mixing, there must be one Bitcoin received by the middle mix during mixing for any protocol instance with the middle mix.</p></div></p></div><div class=\"section_2\" id=\"sec4d3\"><h4>3) Safe Middle Mix</h4><p>The account balance of the middle mix is consistent so that the Bitcoin of the middle mix is safe. The following formula is specified for the <i>safe middle mix</i>, where <monospace>A1</monospace> (<monospace>A2</monospace>, <monospace>A3</monospace>) denotes the entity playing the role of coin sender, <monospace>M</monospace> denotes the entity playing the role of the middle mix, <monospace>s</monospace> denotes the account of <monospace>A2</monospace>, <monospace>r</monospace> denotes coin destination, <monospace>x</monospace> denotes the escrow address, and <monospace>b</monospace> is the blinded destination.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu35-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu35-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p></div></div><div class=\"section_2\" id=\"sec4e\"><h3>E. Model Lemmas</h3><p>We have defined Blindcoin security goals as traced properties with guarded first-order logic formulas, and the observational equivalence property based on the <monospace>diff</monospace> operator. Based on the above definitions, we encode Blindcoin property into our model lemmas which are detailed listed in this section.</p><p>Authentication is a trace property, and we encode authentication based on <a ref-type=\"definition\" anchor=\"definition1\" class=\"fulltext-link\">definitions 1</a>\u2013<a ref-type=\"definition\" anchor=\"definition2\" class=\"fulltext-link\">2</a>. For <i>Non-injective Agreement</i>, we specify <monospace>lemma Agreement_nia_Offer</monospace> to guard the data exchange of Blindcoin offer between the coin sender and the middle mix, <monospace>lemma Agreement_nia_Esc</monospace> to guard the data exchange of the escrow address between the middle mix and the coin sender, and <monospace>lemma Agreement_nia_Dst</monospace> to guard the data exchange of coin destination between the coin sender and the middle mix. We specify <monospace>lemma Agreement_ia_Offer</monospace>, <monospace>lemma Agreement_ia_Esc</monospace>, and <monospace>lemma Agreement_ia_ Dst</monospace>, to guard insecure states against <i>Injective Agreement</i>.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu36-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu36-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu37-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu37-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu38-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu38-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu39-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu39-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu40-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu40-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu41-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu41-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p><p>We encode accountability property based on <a ref-type=\"definition\" anchor=\"definition3\" class=\"fulltext-link\">definitions 3</a>\u2013<a ref-type=\"definition\" anchor=\"definition4\" class=\"fulltext-link\">4</a>. For each decision made by <i>Judging Procedures</i> of Blindcoin, four security lemmas are specified for SmartVerif to guard against insecure trace that violates <i>individual accountability</i>. We specify <monospace>lemma Accountable_A_1</monospace> to capture the insecure trace that wrongly blames the coin sender who refuses the payment for the middle mix, <monospace>lemma Accountable_M_1</monospace> to capture the insecure trace that wrongly blames the coin sender who refuses to claim the correct warranty, <monospace>lemma Accountable_A_2</monospace> to capture the insecure trace that wrongly blames the coin sender who refuses to unblind the coin destination, and <monospace>lemma Accountable_M_2</monospace> to capture the insecure trace that wrongly blames the middle mix who refuses the payment for the coin destination.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu42-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu42-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu43-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu43-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu44-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu44-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu45-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu45-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p><p>We define <monospace>lemma Secrecy</monospace> for Blindcoin model to guard against insecure trace that violates <i>Secret_Mappings</i> based on the <a ref-type=\"definition\" anchor=\"definition5\" class=\"fulltext-link\">definition 5</a>. We check <i>Unlinkable Coin Receiver</i> based on the <a ref-type=\"definition\" anchor=\"definition6\" class=\"fulltext-link\">definition 6</a> using the observational equivalence and the operator <monospace>diff</monospace>. The required special treatment of Blindcoin model is described in the next section.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu46-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu46-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p><p>For the balance consistency property, we specify three security lemmas for SmartVerif to guard against the insecure traces of Blindcoin executions. To guard against the violation of <i>No Double Spending</i>, we specify <monospace>lemma NoDoubleSpending</monospace> based on the <a ref-type=\"definition\" anchor=\"definition7\" class=\"fulltext-link\">definition 7</a> to show the security of the modeled blockchain. We specify <monospace>lemma Consistency_SR</monospace> for the Blindcoin model based on the <a ref-type=\"definition\" anchor=\"definition8\" class=\"fulltext-link\">definition 8</a> to guard against the violation of <i>Safe Transfer</i>, and <monospace>lemma Consistency_Fund</monospace> based on the <a ref-type=\"definition\" anchor=\"definition9\" class=\"fulltext-link\">definition 9</a> to guard against the violation of <i>Safe Middle Mix</i>.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu47-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu47-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu48-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu48-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu49-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu49-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p></div></div>\n<div class=\"section\" id=\"sec5\"><div class=\"header article-hdr\"><div class=\"kicker\">\n\t\t                        SECTION V.</div><h2>Formalization of State Transition</h2></div><p>In this section, we demonstrate the state transitions modeled for the Blindcoin protocol and the encoded symbolic model rules in SmartVerif <a ref-type=\"bibr\" anchor=\"ref13\" id=\"context_ref_13_5\">[13]</a>.</p><div class=\"section_2\" id=\"sec5a\"><h3>A. Terms, Functions and Equations</h3><p>To capture the Blindcoin behaviors covering the Bitcoin data layer, network layer, and application layer, we define terms, functions, and equations for the Blindcoin model to represent Bitcoin structural transactions, growing blockchain, and Blindcoin mixing service. <a ref-type=\"table\" anchor=\"table2\" class=\"fulltext-link\">Table 2</a> lists the function symbols and equations applied in the Blindcoin model.<div class=\"figure figure-full table\" id=\"table2\"><div class=\"figcaption\"><b class=\"title\">TABLE 2 </b>\nFunction Symbols and Description</div><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t2-3228109-large.gif\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t2-3228109-small.gif\" alt=\"Table 2- &#10;Function Symbols and Description\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div></div></p><p>In our model, we specify Bitcoin structural transaction as <monospace>&lt;l,txin,s,e,txid,h&gt;</monospace>, where <monospace>l</monospace> is the label of blockchain, <monospace>txin</monospace> is the previous transaction id,<monospace>s</monospace> is the input script to unlock the previous transaction, <monospace>e</monospace> is the output script to lock current transaction, <monospace>txid</monospace> is current transaction id that equals to <monospace>hash(&lt;txin,s,e&gt;)</monospace>, <monospace>h</monospace> is current block height. The updated chain length is specified as a string with an increasing length that starts with \u20191\u2019, and so does the height of the newly added block. In the Blindcoin model, a newly produced empty block is empty at first, whose block height h+\u20191\u2019 is the current chain length concatenated with \u20191\u2019. And the newly produced empty block is the premise for the Bitcoin blockchain to record the newly generated transaction.</p><p>The defined model rules force the growth of the blockchain and limit no more than one Bitcoin transaction in each block. Then, we can capture the blockchain semantics and achieve the automatic verifiability. To keep the Bitcoin blockchain growing and the new transaction can be recorded, if the block with height h+\u20191\u2019 is added to the chain, then a new empty block with height h+\u20191\u2019+\u20191\u2019 is produced at the same time. If the newly produced block is added to the Bitcoin blockchain, the blockchain is updated as the model rules specify. To achieve the finite model reasoning time and catch the whole Blindcoin protocol procedures, in our model, we specify that the bitcoin blockchain only grows in a limited period, and the execution of the Blindcoin protocol is done before the chain stops growing.</p><p>We also define Blindcoin model functions and equations to capture different mixing services. To model transaction scripts used to protect the randomly mix Bitcoin shown in <a ref-type=\"fig\" anchor=\"fig2\" class=\"fulltext-link\">Figure 2</a>, this work defines the equation <monospace>verify(x,sign(x,d),pk(d))=true</monospace> to capture the functionality of signature lock. For ease of understanding, we take the RSA-based signature as an example to explain our modeling of Bitcoin ownership. In RSA, every public key <monospace>e</monospace> is generated along with its paired private key <monospace>d</monospace>, namely <monospace>e=pk(d)</monospace>, and requires <monospace>e*d=1</monospace>. The signature <monospace>sign(x,d)</monospace> that equals <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\text{x}^{d}$\n</tex-math></inline-formula></monospace> in RSA, where <monospace>x</monospace> is the signed message and <monospace>d</monospace> is the private key of the signer. The function <monospace>verify</monospace> needs the signed message <monospace>x</monospace>, the signature <monospace>s</monospace>, and the public key <monospace>e</monospace> as its three arguments, and <monospace>verify</monospace> is defined to represent signature verification. Any party can verify a signature by comparing <monospace>x</monospace> with <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\text{s}^{e}$\n</tex-math></inline-formula></monospace>, where <monospace>e*d=1</monospace> and <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\text{s}^{e}$\n</tex-math></inline-formula></monospace> equals <monospace>x</monospace> if the signature is valid. For Bitcoin address, namely, the public key of the coin owner, local macro <monospace>e=pk(x)</monospace> is defined to let <monospace>e</monospace> equal to the public key of the coin receiver and <monospace>s</monospace> be the signature of the coin receiver.</p><p>This work defines the blinding function <monospace>blind</monospace> and the paired unblinding function <monospace>unblind</monospace> used to hide the mapping between pseudonyms to model the blind signature scheme shown in <a ref-type=\"fig\" anchor=\"fig2\" class=\"fulltext-link\">Figure 2</a>. Function <monospace>blind</monospace> needs the randomness <monospace>r</monospace> and message <monospace>x</monospace> as its two arguments, and <monospace>blind</monospace> is defined to represent blinded message <monospace>blind(x,r)</monospace>. Function <monospace>unblind</monospace> needs the randomness <monospace>r</monospace> and blinded message <monospace>y</monospace> as its two arguments, and <monospace>unblind</monospace> is defined to represent the unblinded result <monospace>unblind(y,r)</monospace>. In RSA-based blind signature scheme, <monospace>blind(x,r)=<inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\text{r}^{e}$\n</tex-math></inline-formula>*x</monospace> is the blinded result of message <monospace>x</monospace>, and the unblinded result <monospace>unblind(y,r)</monospace> equals <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\text{r}^{-1}$\n</tex-math></inline-formula>*y</monospace>. The blinded message <monospace>b</monospace> equals <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\text{r}^{e}$\n</tex-math></inline-formula>*x</monospace> and the blinded signature <monospace>y=sign(b,d)</monospace> equals <monospace>r*<inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\text{x}^{d}$\n</tex-math></inline-formula></monospace>. Blindcoin model verifies the signature by comparing the original message <monospace>x</monospace> with the unblinded result of valid signature <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\text{r}^{-1}$\n</tex-math></inline-formula>*<inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\text{y}^{e}$\n</tex-math></inline-formula></monospace>. Therefore, this work specifies the equation <monospace>unblind(sign(blind(x,r),d),r)=sign(x,d)</monospace> to model signature unblinding and verification, and equation <monospace>unblind(blind(x,r),r)=x</monospace> is specified to model the property of blinding and unblinding functions when <monospace>r=<inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\text{r}^{e}$\n</tex-math></inline-formula></monospace>. The signature function <monospace>sign</monospace> and the paired verification function <monospace>verify</monospace> are used not only in the bitcoin transaction but also in blind signature verification.</p></div><div class=\"section_2\" id=\"sec5b\"><h3>B. Model Facts</h3><p>We define Blindcoin model facts consumed/produced during state transitions of Blindcoin protocol and the special action facts (also called actions) guarded by the verification tool to detect insecure states. In the symbolic setting, Blindcoin model facts and actions are as the form <monospace>F(t<sub>1</sub>,\u2026,<inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{t}}_{n}$\n</tex-math></inline-formula>)</monospace>, where <monospace>F</monospace> is a specified fact/action symbol and <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{t}}_{i}$\n</tex-math></inline-formula></monospace> is one of the <monospace>n</monospace> terms composing this fact/action. The Blindcoin model fact symbols and action symbols are listed in <a ref-type=\"table\" anchor=\"table3\" class=\"fulltext-link\">Tables 3</a> and <a ref-type=\"table\" anchor=\"table4\" class=\"fulltext-link\">4</a>. The Blindcoin model fact/action terms are built from Blindcoin model functions, which are used to explore the concurrent interactions of the Bitcoin data layer, network layer, and script layer. To reduce the model size and achieve an automated-verifiable Blindcoin model, we define Blindcoin model facts to capture the features of the structural transaction, growing blockchain, and Blindcoin mixing service.<div class=\"figure figure-full table\" id=\"table3\"><div class=\"figcaption\"><b class=\"title\">TABLE 3 </b>\nBlindcoin Model Fact and Meaning</div><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t3-3228109-large.gif\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t3-3228109-small.gif\" alt=\"Table 3- &#10;Blindcoin Model Fact and Meaning\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div></div><div class=\"figure figure-full table\" id=\"table4\"><div class=\"figcaption\"><b class=\"title\">TABLE 4 </b>\nBlindcoin Model Action and Meaning</div><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t4-3228109-large.gif\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t4-3228109-small.gif\" alt=\"Table 4- &#10;Blindcoin Model Action and Meaning\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div></div></p><p>To model structural transactions and essential terms generated by the data layer, we apply the fact symbol <monospace>Ltk</monospace> to associate a private key generated by the built-in fact symbol <monospace>Fr</monospace> to a Bitcoin user. The argument of <monospace>Fr</monospace> is the fresh value used as the randomness. Fact symbol <monospace>Pk</monospace> associates the public key to a user identity, and anyone can look up the public key of the user via the fact <monospace>Fr</monospace>. Fact symbol <monospace>RecordedTx</monospace> is used to retrieve the confirmed transaction recorded by the blockchain. Action symbol <monospace>Known</monospace> labels the trace that the public gets the pseudonym mapping in a recorded transaction. Action symbol <monospace>LowerThan</monospace> restricts that the current block must be larger than the current chain length. Action symbol <monospace>NewCoinbase</monospace> labels the trace that the blockchain mines a new Bitcoin. Action symbol <monospace>Unspent</monospace> restricts that the block height when the Bitcoin becomes spendable is lower than the block height when it becomes unspendable. Action symbol <monospace>Inc</monospace> labels the trace that the Bitcoin amount received by a Bitcoin address is increased. Action symbol <monospace>Spent</monospace> restricts that the block height when the Bitcoin becomes unspendable is higher than the block height when it becomes spendable. Action symbol <monospace>Update</monospace> labels the trace that the blockchain record is updated. Action symbol <monospace>SteadyTx</monospace> labels the trace that the blockchain confirms a transaction.</p><p>The fact symbol <monospace>Basechain</monospace> is used to specify the initialization information, which denotes the blockchain category and compatibility information to model the growing blockchain/network layer. Fact symbol <monospace>ChainHeight</monospace> is defined to specify the tail block height of the blockchain, which can only be consumed once to guarantee blockchain growth. Blindcoin model looks up the current block height via the fact <monospace>ChainHeight</monospace> and consumes this fact to determine the block height term of <monospace>EmptyBlock</monospace>. The Blindcoin model generates the newly generated block via the fact <monospace>EmptyBlock</monospace> when the chain grows and the new transaction generation consumes the fact to determine the confirmation time of the new transaction. Action symbol <monospace>FirstBlock</monospace> labels the trace of the first block generation. Action symbol <monospace>ChainHeight</monospace> labels the trace of looking up the chain height. Action symbol <monospace>EmptyBlock</monospace> labels the trace of the new empty block generation.</p><p>The messages of the newly generated public key are broadcast via the fact <monospace>Out</monospace> and received via the fact <monospace>In</monospace>. This work considers four kinds of channels that are public channel, confident channel, authentic channel, and secure channel separately. Information received/sent by the public channel with facts <monospace>In</monospace> and <monospace>Out</monospace> from/to the public, can be controlled by the Dolev-Yao adversary. Fact symbols <monospace>Out_Auth</monospace>, <monospace>Auth</monospace>, and <monospace>In_Auth</monospace> are defined to specify the authentic channel functionalities, and fact symbols <monospace>Out_Sec</monospace>, <monospace>Sec</monospace>, and <monospace>In_Sec</monospace> are defined to specify the secure channel functionalities. Some symbols can be used directly without definition, such as the fact symbol of attacker knowledge <monospace>K</monospace>, the fact symbol of fresh value generation <monospace>Fr</monospace>, and the fact symbols of public outputs <monospace>Out</monospace> and public inputs <monospace>In</monospace>. The modeling of these channel functionalities is introduced in the paragraph Channel rules.</p><p>This work symbolizes the bulletin board to record the accountable warranties published via the bulletin board to capture the features of the Blindcoin mixing service and the message terms in the script layer. The terms of the fact <monospace>BulletBoard</monospace> is open-access, representing the auditable information of the Blindcoin protocol. This work defines the fact symbol <monospace>A_i</monospace> to define the <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{i}}_{th}$\n</tex-math></inline-formula></monospace> states of the coin sender and the fact symbol <monospace>A_i_sync</monospace> to verify observational equivalence, which is detailed introduced in <a ref-type=\"sec\" anchor=\"sec3\" class=\"fulltext-link\">Section III</a>. Fact symbol <monospace>M_i</monospace> to define the <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{i}}_{th}$\n</tex-math></inline-formula></monospace> states of the middle mix, and <monospace>B_i</monospace> to define the <monospace><inline-formula id=\"\"><tex-math notation=\"LaTeX\">${\\text{i}}_{th}$\n</tex-math></inline-formula></monospace> states of the coin receiver. Fact symbol <monospace>NormalTx</monospace> is defined to look up the confirmed transaction with signature lock.</p><p><a ref-type=\"fig\" anchor=\"fig3\" class=\"fulltext-link\">Figure 3</a> shows the basic Bitcoin state transitions specified by Blindcoin model facts. <a ref-type=\"fig\" anchor=\"fig4\" class=\"fulltext-link\">Figure 4</a> shows state transitions of the Blindcoin protocol that choose signature lock script to secure the transferred Bitcoin. In <a ref-type=\"fig\" anchor=\"fig3\" class=\"fulltext-link\">Figure 3</a> and <a ref-type=\"fig\" anchor=\"fig4\" class=\"fulltext-link\">Figure 4</a>, the underlined texts denote model rules that consume and produce Blindcoin model facts to specify protocol executions, and the text framed with the solid rectangle denotes the Blindcoin model actions that are used in Blindcoin security lemmas to guard the insecure state, the text framed with the dotted rectangle denotes the Blindcoin model actions that are used in model restrictions to guide model reasoning, the circled texts denote the entity states and the texts above the horizontal arrows denote the communication message and their directions.\n<div class=\"figure figure-full\" id=\"fig3\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu3-3228109-large.gif\" data-fig-id=\"fig3\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu3-3228109-small.gif\" alt=\"FIGURE 3. - State transitions modeled for Bitcoin blockchain.\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\">FIGURE 3. </b><fig><p>State transitions modeled for Bitcoin blockchain.</p></fig></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"fig4\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu4-3228109-large.gif\" data-fig-id=\"fig4\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu4-3228109-small.gif\" alt=\"FIGURE 4. - State transitions modeled for Blindcoin.\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\">FIGURE 4. </b><fig><p>State transitions modeled for Blindcoin.</p></fig></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"fig5\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu5-3228109-large.gif\" data-fig-id=\"fig5\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu5-3228109-small.gif\" alt=\"FIGURE 5. - Communication channels modeled for Blindcoin.\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\">FIGURE 5. </b><fig><p>Communication channels modeled for Blindcoin.</p></fig></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p></div><div class=\"section_2\" id=\"sec5c\"><h3>C. Channel Rules</h3><p>We model four communication channels with different security threats to consider real-world security scenarios of Blindcoin communications. The definitions of the four communication channels are stated in <a ref-type=\"definition\" anchor=\"definition10\" class=\"fulltext-link\">definition 10</a><a ref-type=\"definition\" anchor=\"definition11\" class=\"fulltext-link\"/><a ref-type=\"definition\" anchor=\"definition12\" class=\"fulltext-link\"/>\u2013<a ref-type=\"definition\" anchor=\"definition13\" class=\"fulltext-link\">13</a>. Any entity can be the auditor to look up the bulletin board and judge the malicious. Since the audit information on the bulletin board is open-access and temper-resistant, the communication among the coin sender, the bulletin board, and the middle mix uses the authentic channel. Due to the openness of the Bitcoin network, the communication among the coin sender, the P2P network, and the middle mix uses the public channel. Meanwhile, we also consider different scenarios of P2P network. If the P2P network is dishonest, the communications between the coin sender, the coin receiver, the middle mix, and the P2P network, use the public channel. Otherwise, the communications with blockchain use the authentic channel.</p><p><div class=\"section_2\" id=\"definition10\"><h4>Definition 10:</h4><p>If a Blindcoin communication channel is modeled as <b>public</b>, then assuming that the attacker i) can control communication traffic sent/received by the honest entity with message eavesdropping, interception, modification, and injection; and ii) can act as the protocol entities to sent/received communication traffic.</p></div></p><p><div class=\"section_2\" id=\"definition11\"><h4>Definition 11:</h4><p>If a Blindcoin communication channel is modeled as <b>confidential</b>, then assuming that the attacker i) cannot read the communication traffic sent/received by the honest Blindcoin entity with message eavesdropping; and ii) can act as the Blindcoin entities to sent/received communication traffic.</p></div></p><p><div class=\"section_2\" id=\"definition12\"><h4>Definition 12:</h4><p>If a Blindcoin communication channel is modeled as <b>authentic</b>, then assuming that the attacker i) can read the communication traffic sent/received by the honest Blindcoin entity with message eavesdropping; ii) cannot tamper the communication traffic sent/received by the honest Blindcoin entity with message interception, modification, and injection; iii) cannot act as the Blindcoin entities to sent/received communication traffic.</p></div></p><p><div class=\"section_2\" id=\"definition13\"><h4>Definition 13:</h4><p>If a Blindcoin communication channel is modeled as <b>secure</b>, then assuming that the attacker i) cannot read and tamper the communication traffic sent/received by the honest Blindcoin entity with message eavesdropping, interception, modification, and injection; ii) cannot act as the Blindcoin entities to sent/received communication traffic.</p></div></p><p>As everyone knows, the Bitcoin transaction is broadcast via the public channel, namely, the Bitcoin transaction message can be received/sent via the fact symbol <monospace>In</monospace>/<monospace>Out</monospace>. Due to the built-in rules <monospace>irecv</monospace> and <monospace>isend</monospace>, the attacker can control communication traffic sent/received by the fact <monospace>Out</monospace>/<monospace>In</monospace> with message eavesdropping, interception, modification, and injection. We limit attacker abilities to control messages communicated through special channels and specify the model rules <monospace>OutCC</monospace>, <monospace>InCC</monospace> and <monospace>InCCAdv</monospace> to protect confidential communication, the rules <monospace>OutAC</monospace> and <monospace>InAC</monospace> to protect authentic communication, and the rules <monospace>OutSC</monospace> and <monospace>InSC</monospace> to protect secure communication. This work separately adopts certain attacker-limited rules in the corresponding channel assumption to remove specified abilities of the Blindcoin protocol attackers and offer channel protection to analyze Blindcoin protocol security under fine-grained channel assumptions.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu50-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu50-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p><p>Due to different implementations of the channel between the coin sender and the middle mix, this work not only assumes that their communications are sent/received via the facts <monospace>Out</monospace>/<monospace>In</monospace> but also assumes that they build an authentic channel and communicate Blindcoin protocol messages via the facts <monospace>In_Auth</monospace>/<monospace>Out_Auth</monospace>. So we separately consider the communication channel for the Bitcoin blockchain to send its records to be authentic and insecure. So the blockchain records can be received via the facts <monospace>In_Auth</monospace> and <monospace>In</monospace> in different scenarios. The sent/received message between the P2P network and the Blockchain is protected against the attacker, namely the communications inside the Bitcoin consensus network for chain growth are assumed as secure. This work separately considers the communication channel between the bulletin board and the user to be authentic and public, namely, the coin sender and the middle mix can receive/send the message from/to the bulletin board via the facts <monospace>In_Auth</monospace>/<monospace>Out_Auth</monospace> and <monospace>In</monospace>/<monospace>Out</monospace>. We model that the bullet broad and the blockchain can receive the Blindcoin auditable message and Bitcoin transaction via the fact <monospace>In</monospace>.</p><p>The insecure communication via the public channel is based on the built-in rule <monospace>irecv</monospace> and rule <monospace>isend</monospace> whose traces are labeled with action <monospace>K</monospace>. As <a ref-type=\"fig\" anchor=\"fig5\" class=\"fulltext-link\">Figure 5 (a)</a> shows, we model that any message outputted from this channel can be collected and analyzed by the attacker in the public environment, and any message inputted into it can be fabricated. Confidential communication via the confidential channel is modeled by user-defined rule <monospace>OutCC</monospace> with trace label <monospace>ChOut_C</monospace>, <monospace>InCC</monospace> with trace label <monospace>ChIn_C</monospace> and <monospace>InCCAdv</monospace>. As <a ref-type=\"fig\" anchor=\"fig5\" class=\"fulltext-link\">Figure 5 (b)</a> shows, we model that the attacker hidden in the public environment cannot read the message outputted from the confidential channel but can input fake messages into this channel. Authentic communication via the authentic channel is modeled by user-defined rule <monospace>OutAC</monospace> with trace label <monospace>ChOut_A</monospace>, and <monospace>InAC</monospace> with trace label <monospace>ChIn_A</monospace>. As <a ref-type=\"fig\" anchor=\"fig5\" class=\"fulltext-link\">Figure 5 (c)</a> shows, we model that the attacker hidden in the public environment cannot input the fake message into the authentic channel but can read the messages outputted from this channel. Secure communication via the secure channel is modeled by user-defined rule <monospace>OutSC</monospace> with trace label <monospace>ChOut_S</monospace>, and <monospace>InSC</monospace> with trace label <monospace>ChIn_S</monospace>. As <a ref-type=\"fig\" anchor=\"fig5\" class=\"fulltext-link\">Figure 5 (d)</a> shows, we model that the attacker hidden in the public environment cannot read the message outputted from the secure channel and cannot input fake messages into this channel.</p></div><div class=\"section_2\" id=\"sec5d\"><h3>D. Blindcoin Rules</h3><p>We define multiset rewriting rules to specify the premises and conclusions of protocol execution to model the state transitions of the Blindcoin protocol model. To facilitate the understanding, the rules <monospace>SendOffer</monospace> and <monospace>UnblindReceiver</monospace> in <a ref-type=\"fig\" anchor=\"fig4\" class=\"fulltext-link\">Figure 4</a> are explained as examples. Based on the explanations of the Blindcoin model symbols in <a ref-type=\"table\" anchor=\"table2\" class=\"fulltext-link\">Table 2</a>, <a ref-type=\"table\" anchor=\"table3\" class=\"fulltext-link\">Table 3</a> and <a ref-type=\"table\" anchor=\"table4\" class=\"fulltext-link\">Table 4</a>, the definitions of other Blindcoin model rules can be inferred from the state transitions in <a ref-type=\"fig\" anchor=\"fig3\" class=\"fulltext-link\">Figures 3</a>\u2013<a ref-type=\"fig\" anchor=\"fig4\" class=\"fulltext-link\">4</a>.</p><p>We define <monospace>rule SendOffer</monospace> to specify the premises for a coin sender to send a Blindcoin protocol offer, the labels that trace/restrict the state transitions, and the conclusion of offer sending. The facts <monospace>Fr(n)</monospace> and <monospace>Fr(r)</monospace> are defined as part of the premises to send the Blindcoin protocol offer. For Blindcoin, it uses randomness to determine the mixing fee that the coin sender needs to pay and uses the blind signature scheme to break the address links. It requires a nonce as the parameter of the blinding function and the unblinding function. In this rule, the fresh nonce is denoted as <monospace>n</monospace> and generated via the fact symbol <monospace>Fr</monospace> to represent the nonce to randomize the mixing fee. A fresh nonce <monospace>r</monospace> is also generated by the fact symbol <monospace>Fr</monospace> to represent the nonce to blind the message and unblind the related signature. To model the premise state to be retrieved, we specify the fact <monospace>A_0</monospace> whose terms consist of the coin sender\u2019s identity <monospace>A</monospace>, another coin sender\u2019s identity to unblinding the signature <monospace>A2</monospace>, its private key <monospace>ltkA</monospace>, the coin receiver\u2019s identity <monospace>B</monospace>, and the coin receiver\u2019s public key <monospace>pkB</monospace>. Fact <monospace>A_0</monospace> denotes the first state of the coin sender after protocol initialization. To model the premise bulletin board records publishing the data of the available mix server, we specify the fact <monospace>BulletBroad</monospace> whose terms consist of the log mark <monospace>\u2019ReadyMix\u2019</monospace>, the mix server\u2019s identity <monospace>M</monospace>, and its public key <monospace>pkM</monospace>. It uses the fact symbol <monospace>BulletBoard</monospace> with the prefix <monospace>!</monospace> to model the append-only and arbitrarily-lookup records on the bulletin board, whose content cannot be modified and is published to the public.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu51-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu51-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu52-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu52-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p><p>These four premise facts are consumed by <monospace>rule SendOffer</monospace> to trigger the state transition, and its trace are restricted by action <monospace>Unique</monospace>, which limits the same fact term <monospace>ltkA</monospace> and the same fact term <monospace>pkB</monospace> to appear no more once during model reasoning. The state transitions triggered by <monospace>rule SendOffer</monospace> are labeled by the action <monospace>Claim_Offer</monospace> and action <monospace>Secret</monospace> to guard against insecure traces. Blindcoin requires the coin sender to blind its Blind offer message before sending the offer to the mix server. This example assumes that the coin sender sends the blinded offer via the public channel. It specifies the fact <monospace>Out</monospace> to publish the blinded offer via the public channel, whose terms consist of the coin sender\u2019s identity <monospace>A</monospace>, the message mark <monospace>\u2019Offer\u2019</monospace>, the blinded offer <monospace>blind(dst,<inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\sim \\text{r}$\n</tex-math></inline-formula>)</monospace> where <monospace>dst</monospace> is the local macro that equals to <monospace>&lt;pkB,<inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\sim \\text{n}$\n</tex-math></inline-formula>&gt;</monospace>. As one of the conclusions, the coin sender\u2019s state is transited into its second state <monospace>A_1</monospace>, whose terms consist of <monospace>A</monospace>, <monospace>A2</monospace>, <monospace>M</monospace>, <monospace>pkM</monospace>, <monospace>ltkB</monospace>, <monospace>n</monospace>, and <monospace>r</monospace>.</p><p>We define <monospace>rule UnblindReceiver</monospace> to specify the premise, the labels, and the conclusion for the state transition of a coin sender unblinding the destination. Blindcoin protocol states that the warranty completed by the mix server consists of a signed agreement from the mix server, and the user can get the evidence against the malicious mix server. It requires the mix server to publish the warranty to the bulletin board and the coin sender to look up the warranty record from the bulletin board. In this example, <monospace>rule UnblindReceiver</monospace> assumes that the coin sender receives the warranty from bulletin board records via the authentic channel. It specifies the premise fact <monospace>In_Auth</monospace> whose terms are the identification of bulletin board <monospace>BB</monospace>, the coin receiver\u2019s identity <monospace>A</monospace>, the record mark <monospace>\u2019Warranty\u2019</monospace>, and the warranty <monospace>w</monospace>, namely the signature of the message <monospace>&lt;pkB,<inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\sim \\text{n}$\n</tex-math></inline-formula>&gt;</monospace> blinded with the randomness <monospace>r</monospace> and signed by the private key <monospace>ltkM</monospace>.</p><p>This rule specifies the premise fact <monospace>A_2</monospace> for the coin sender to retrieve, whose terms consist of <monospace>A</monospace>, <monospace>A2</monospace>, <monospace>M</monospace>, <monospace>pkM</monospace>, <monospace>ltkA</monospace>, <monospace>pkB</monospace>, ~<monospace>n</monospace>, ~<monospace>r</monospace>, the escrow address <monospace>pkM1</monospace>, and the announced partial warranty <monospace>pw</monospace>. Fact <monospace>A_2</monospace> is the third state of the coin receiver after protocol initialization and is generated by the rule <monospace>PayMix</monospace>. It consumes these two premise facts to trigger the state transition, and its traces are restricted by action <monospace>Eq</monospace>, which limits the warranty to be valid so that the unblinded signature can be recovered.</p><p>To consider different implementations of the coin sender, we separately assume the coin sender is unlazy that generates a new address each time and lazy that reuses the same address. In this example, we assume that the coin sender is unlazy and the traces are restricted by the action <monospace>InEq</monospace> that limits the coin sender to use a new identity <monospace>A2</monospace> that is different from the old identity <monospace>A</monospace>. The triggered state transition is labeled by the action <monospace>UnblindDst</monospace> and <monospace>Claim_Dst</monospace> to guard against the insecure traces. The coin sender publishes the unblinded warranty via the authentic channel and the fact <monospace>Out_Auth</monospace> is specified whose terms consist of <monospace>A2</monospace>, <monospace>BB</monospace>, the message mark <monospace>\u2019Unblind\u2019</monospace>, <monospace>pkB</monospace>, <monospace>n</monospace>, and the recovered signature <monospace>s</monospace>, namely the unblinded warranty <monospace>unblind(w,<inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\sim \\text{r}$\n</tex-math></inline-formula>)</monospace>.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu53-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu53-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu54-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu54-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p><p>When we check <i>Unlinkable Coin Receiver</i> of Blindcoin, we specially treat the data of the coin receiver via the above definitions of <monospace>rule UnblindReceiver</monospace> and <monospace>rule UnblindReceiver_sync</monospace>. The fact <monospace>A_2_sync</monospace> contains the unblinded identifiable information of the coin receiver, which should be denoted as the deference between protocol execution. Therefore, we apply <monospace>rule UnblindReceiver_sync</monospace> to specify the difference between Blindcoin executions by the operator <monospace>diff</monospace>. As the two rules demonstrated below, the difference between executions is that the fact <monospace>diff(&lt;pkB1,~n1,s1&gt;,&lt;pkB2, ~n2,s2&gt;)</monospace> is replaced by <monospace>&lt;pkB1,~n1,s1&gt;</monospace> and <monospace>&lt;pkB2,~n2,s2&gt;</monospace>.</p></div></div>\n<div class=\"section\" id=\"sec6\"><div class=\"header article-hdr\"><div class=\"kicker\">\n\t\t                        SECTION VI.</div><h2>Verification Results</h2></div><div class=\"section_2\" id=\"sec6a\"><h3>A. Verification Result</h3><p>We conduct the experiments to verify the security of the Blindcoin protocol and evaluate the model\u2019s ability of vulnerability detection. Because of our tool-friendly model, we reason our model automatically and get the proofs of the Blindcoin vulnerabilities assisted with SmartVerif. Our experiments comprehensively prove the vulnerabilities in the Blindcoin protocol and detected the attacks violating authentication, accountability, anonymity, and balance consistency. The detected insecure states against the security goals are demonstrated in our Appendix.</p><p><a ref-type=\"table\" anchor=\"table5\" class=\"fulltext-link\">Tables 5</a>\u2013<a ref-type=\"table\" anchor=\"table6\" class=\"fulltext-link\"/><a ref-type=\"table\" anchor=\"table7\" class=\"fulltext-link\"/><a ref-type=\"table\" anchor=\"table8\" class=\"fulltext-link\">8</a> demonstrate our verification results of the Blindcoin security, where \u2713 denotes the satisfied lemma and \u2717 denotes the violated lemma. The proofs of the violated lemmas and the detection of the possible Blindcoin attacks are illustrated in the Appendix. Here, we introduce how the detected attacks violate our model lemma and explain the Blindcoin attacks detected by our model. And we offer suggestions to prevent the detected attacks. After that, we discuss the generalization of our model, and show how to verify other Bitcoin-compatible mixing protocol based on our model.<div class=\"figure figure-full table\" id=\"table5\"><div class=\"figcaption\"><b class=\"title\">TABLE 5 </b>\nVerification Results of Authentication</div><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t5-3228109-large.gif\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t5-3228109-small.gif\" alt=\"Table 5- &#10;Verification Results of Authentication\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div></div><div class=\"figure figure-full table\" id=\"table6\"><div class=\"figcaption\"><b class=\"title\">TABLE 6 </b>\nVerification Results of Accountability</div><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t6-3228109-large.gif\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t6-3228109-small.gif\" alt=\"Table 6- &#10;Verification Results of Accountability\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div></div><div class=\"figure figure-full table\" id=\"table7\"><div class=\"figcaption\"><b class=\"title\">TABLE 7 </b>\nVerification Results of Anonymity</div><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t7-3228109-large.gif\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t7-3228109-small.gif\" alt=\"Table 7- &#10;Verification Results of Anonymity\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div></div><div class=\"figure figure-full table\" id=\"table8\"><div class=\"figcaption\"><b class=\"title\">TABLE 8 </b>\nVerification Results of Balance Consistency</div><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t8-3228109-large.gif\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t8-3228109-small.gif\" alt=\"Table 8- &#10;Verification Results of Balance Consistency\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div></div></p></div><div class=\"section_2\" id=\"sec6b\"><h3>B. Detected Vulnerabilities</h3><div class=\"section_2\" id=\"sec6b1\"><h4>1) Attacks Violating Authentication</h4><p>When verifying the agreement of the Blindcoin offer, we detect that the attacker can act as the coin sender and send the offer message after replacing the coin sender field <monospace>pk(~ltkA)</monospace> with the attacker\u2019s account <monospace>pkA</monospace>. Our proof shows that the honest middle mix still declares the partial warranty as normal even if the mixing offer is sent by the attacker. Once the Blindcoin attacker receives the partial warranty from the middle mix, it acts as the middle mix and forwards the partial warranty to the honest coin sender. Then, the honest coin sender pays to the escrow address. We prove that the middle mix confirms the offer with the Blindcoin attacker, not the honest coin sender. It brings the action <monospace>Claim_running_agr(\u2026,pkA,\u2026, \u2019Offer\u2019,\u2026)</monospace> into conflict with <monospace>Claim_commit_agr (pk(~ltkA),\u2026,\u2019Offer\u2019,\u2026&gt;)</monospace>, violating our lemmas <monospace>Agreement_ nia_offer</monospace> and <monospace>Agreement _ia_offer</monospace>. The violated lemmas mean that the agreement on the data exchange of Blindcoin offer between the coin sender and the middle mix cannot be ensured by Blindcoin.</p><p>When verifying the agreement of the Blindcoin coin destination, we detect that the Blindcoin attacker can act as the coin sender and sends the unblinded destination message after replacing the coin sender field <monospace>pk(~ltkA2)</monospace> with the attacker\u2019s account <monospace>pkA2</monospace>. Our proof shows that the honest middle mix still declares payment to the destination as normal even if the attacker sends the unblinded destination message with the replayed warranty, which leads to the Bitcoin loss of the middle mix. It brought the action <monospace>Claim_running_agr(\u2026,pkA2,\u2026, \u2019Dst\u2019,\u2026)</monospace> into conflict with <monospace>Claim_commit_agr (pk(~ltkA2),\u2026,\u2019Dst\u2019,\u2026&gt;)</monospace>, violating our model lemma <monospace>Agreeme- nt_nia_Dst</monospace> and <monospace>Agreement_ia_ Dst</monospace>. The violated lemmas mean that the agreement of the escrow address between the coin sender and the middle mix cannot be ensured by Blindcoin. Moreover, the Blindcoin warranties may be the same by choosing the blind randomness of different Bitcoin destinations. The attack can be conducted in a dangerous implementation of the middle mix that ignores the repeated use of the escrow address. So it is required to check the uniqueness of the signed escrow address (i.e. the partial warranty).</p></div><div class=\"section_2\" id=\"sec6b2\"><h4>2) Attacks Violating Accountability</h4><p>When verifying the <i>Individual Accountability</i> of the malicious coin sender who sends the offer and refuses the payment to the escrow address, our proof shows that the first escrow address of the middle mix can be tampered with by the attacker and the judge produce will blame the honest coin sender wrongly in the scenario of the public communication channel (i.e. using fact <monospace>Out</monospace> and fact <monospace>In</monospace>). So the account balance of the first escrow address does not increases even if the honest middle mix makes payment to the escrow address. We detect the trace of action <monospace>Claim_PayEsc</monospace> when no corresponding trace of action <monospace>Inc</monospace> was detected, violating our model lemma <monospace>Accountable_A1</monospace>. The violated lemma means that the honest coin sender and the malicious coin sender cannot be distinguished.</p></div><div class=\"section_2\" id=\"sec6b3\"><h4>3) Attacks Violating Anonymity</h4><p>When verifying the <i>Secrecy</i> of Blindcoin, our proof shows that the public can get the transaction link between the coin sender, the middle mix, and the coin receiver if the middle mix is lazy and the coin sender is lazy. We both detect the trace of action <monospace>Known(pk(~ltkA),pk(~ltkM))</monospace> and the trace of action <monospace>Known(pk(~ltM),pk(~ltkB))</monospace>, violating our model lemma <monospace>Secret_Mapping</monospace>. The violated lemma means that Blindcoin may leak the relationship between the coin sender and the coin receiver.</p><p>When we verify <i>Unlinkable CR</i> (Unlinkable Coin Receiver), we detect that the adversary can distinguish two protocol instances where the coin receivers differ with <monospace>diff</monospace>-terms. Lemma <i>Observational Equivalence</i> is proved to be violated. It means that the attacker in the public environment can tell the two protocol instances apart and link certain coin receivers by sending coins and analyzing public transactions by requesting the open-access blockchain.</p></div><div class=\"section_2\" id=\"sec6b4\"><h4>4) Attacks Violating Balance Consistency</h4><p>When verifying the <i>No Double Spending</i> of Blindcoin, our proof shows that one Bitcoin can be spent twice. We detect the trace of action <monospace>Spend(\u2026,<inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\sim \\text{n}$\n</tex-math></inline-formula>,\u2026)</monospace> appears twice, violating our model lemma <monospace>NoDoubleSpending</monospace>. The violated lemma means that Bitcoin can be double-spent like the real-world Bitcoin.</p><p>To eliminate the effect of the double-spent Bitcoin, this work restricts the Bitcoin blockchain to satisfy <i>NoDoubleSpending</i> during model reasoning.</p><p>Blindcoin has no requirement of the middle mix to maintain the list of the old warranty. When verifying the <i>Safe Transfer</i> of Blindcoin in the scenario of the honest P2P network, our proof shows that more than one Bitcoin is received by the coin receiver while only one Bitcoin is sent by the coin sender if the attacker replays the old warranty. We detect the trace of action <monospace>Inc(\u2026,pk(~ltkB))</monospace> appears twice, violating our model lemma <monospace>Consistency_SR</monospace>. The violated lemma means that the Bitcoin received by the coin receiver is more than the Bitcoin sent by the coin sender, and the balance consistency between the coin sender and the coin receiver cannot be ensured.</p><p>When verifying the <i>Safe Mix</i> of Blindcoin in the scenario of the honest P2P network, our proof shows that the coin sender pay to the middle mix only once while the middle mix pay the coin destination twice if the middle mix accepts the replayed warranty. We detected that the trace of action <monospace>Claim_PayDst(<inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\$ $\n</tex-math></inline-formula>A2.1,\u2026,pk(~ltkB))</monospace> conflicts the trace of action <monospace>Claim_PayDst(<inline-formula id=\"\"><tex-math notation=\"LaTeX\">$\\$ $\n</tex-math></inline-formula>A2,\u2026, pk(~ltkB))</monospace>, while the trace of the action <monospace>DstPw(\u2026, pk(~ltkB),\u2026)</monospace> appeared only once. It violates our model lemma <monospace>Consistency_Fund</monospace>, so the balance consistency of Blindcoin fund cannot be ensured.</p></div></div><div class=\"section_2\" id=\"sec6c\"><h3>C. Model Performance and Comparison</h3><p>The experimental results of model performance are summarized in <a ref-type=\"table\" anchor=\"table9\" class=\"fulltext-link\">Tables 9</a>\u2013<a ref-type=\"table\" anchor=\"table10\" class=\"fulltext-link\"/><a ref-type=\"table\" anchor=\"table11\" class=\"fulltext-link\"/><a ref-type=\"table\" anchor=\"table12\" class=\"fulltext-link\">12</a>. <a ref-type=\"table\" anchor=\"table9\" class=\"fulltext-link\">Table 9</a> lists the verification time of the authentication lemmas based on different models and the considered security scenarios are the honest participants who want to achieve agreement with each other on the exchanged message. <a ref-type=\"table\" anchor=\"table10\" class=\"fulltext-link\">Table 10</a> lists the verification time of the accountability lemmas based on different models in different security scenarios with the honest P2P network. <a ref-type=\"table\" anchor=\"table11\" class=\"fulltext-link\">Table 11</a> lists the verification time of the anonymity lemmas based on different models in different security scenarios with the honest P2P network. The first part of <a ref-type=\"table\" anchor=\"table12\" class=\"fulltext-link\">Table 12</a> lists the verification time of lemma <monospace>NoDoubleSpending</monospace> based on different models in different security scenarios to check the consistency of the basechain of Blindcoin. The second part of <a ref-type=\"table\" anchor=\"table12\" class=\"fulltext-link\">Table 12</a> lists the verification time of balance consistency lemmas based on different models in different security scenarios with honest P2P network. The experience results show that the verification of the target lemmas based on the original model is unterminated and the original model cannot achieve automated verification. The verification time costs of the models that removed some of our special treatments for blockchain semantics, namely the models that removed some special restriction defined by our work, are several times the time cost of our model verification based on the treated blockchain semantics. Compared with the model that removed some of our special treatments and the original model with no special treatment, our model is sufficient for automation capability and it can verify all the lemmas in a very efficient way. At the same time, our model can check the target lemmas in different security scenarios more efficiently than the model that removed some of our special treatments, and the original model cannot get the verification result of target lemmas in different security scenarios.<div class=\"figure figure-full table\" id=\"table9\"><div class=\"figcaption\"><b class=\"title\">TABLE 9 </b>\nModel Verification Time Cost of Authentication</div><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t9-3228109-large.gif\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t9-3228109-small.gif\" alt=\"Table 9- &#10;Model Verification Time Cost of Authentication\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div></div><div class=\"figure figure-full table\" id=\"table10\"><div class=\"figcaption\"><b class=\"title\">TABLE 10 </b>\nModel Verification Time Cost of Accountability</div><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t10-3228109-large.gif\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t10-3228109-small.gif\" alt=\"Table 10- &#10;Model Verification Time Cost of Accountability\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div></div><div class=\"figure figure-full table\" id=\"table11\"><div class=\"figcaption\"><b class=\"title\">TABLE 11 </b>\nModel Verification Time Cost of Anonymity</div><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t11-3228109-large.gif\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t11-3228109-small.gif\" alt=\"Table 11- &#10;Model Verification Time Cost of Anonymity\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div></div><div class=\"figure figure-full table\" id=\"table12\"><div class=\"figcaption\"><b class=\"title\">TABLE 12 </b>\nModel Verification Time Cost of Balance Consistency</div><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t12-3228109-large.gif\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu.t12-3228109-small.gif\" alt=\"Table 12- &#10;Model Verification Time Cost of Balance Consistency\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div></div></p></div></div>\n<div class=\"section\" id=\"sec7\"><div class=\"header article-hdr\"><div class=\"kicker\">\n\t\t                        SECTION VII.</div><h2>Discussion</h2></div><p>Based on the verification results and the traced insecure states, we can derive some suggestions for Blindcoin protocol implementations and generalize to other Bitcoin-compatible mixing protocols.</p><div class=\"section_2\" id=\"sec7a\"><h3>A. Suggestions</h3><p>Some suggestions for Blindcoin protocol implementations could be derived from the previous verification results. Firstly, the Blindcoin protocol should explicitly specify the negotiation procedure of mixing offer id. Blindcoin offer id should be added to the required field of mixing offer to ensure injective authentication between Blindcoin mixing entities and resist the relay attack damaging the security of Bitcoin mixing. Before requesting the mixing service of Blindcoin, the coin sender procedure should check whether there is any collision between the newly computed offer and the old offer. Before responding to the coin sender, the middle mix procedure should check the freshness of the offer id, and ensure the unique address paired with the mixing offer. Bitcoin address used by Blindcoin protocol should be ensured one addresses one use.</p><p>Moreover, the Blindcoin protocol should provide explicit security assumptions to guide the protocol implementations, including the security assumption of the communication channel. Due to the openness of the Bitcoin network and no qualification of the middle mix, the security assumptions of the Blindcoin protocol should be as minimal as possible. To further protect the Blindcoin anonymity, the encryption and randomization mechanisms are suggested to be applied to hide the coin destination.</p></div><div class=\"section_2\" id=\"sec7b\"><h3>B. Generalization of the Proposed Model</h3><p>Our model rules and restrictions are defined as a unified form that is suitable to represent the certain procedure of different Bitcoin-compatible mixing protocols. Security analyzers can easily extend our model and verify other bitcoin-compatible mixing protocols. They can optionally apply the appropriate model rules and restrictions to specify the protocol procedures and attacker abilities, and capture the characteristics of the Bitcoin-compatible mixing protocol to be formalized. To make the security analyzer easy to capture Bitcoin transactions with different features, our model specifies Bitcoin transactions as a unified form <monospace>&lt;l,txin,s,e,txid,h&gt;</monospace>, where <monospace>l</monospace> is the label of blockchain, <monospace>txin</monospace> is the previous transaction id, <monospace>s</monospace> is the input script to unlock the previous transaction, <monospace>e</monospace> is the output script to lock current transaction, <monospace>txid</monospace> is current transaction id that equals to <monospace>hash(&lt;txin,s,e&gt;)</monospace>, <monospace>h</monospace> is current block height. When analyzing other Bitcoin-compatible mixing protocols besides Blindcoin, the security analyzer can make a supplementary definition of our model to specify the protocols with different features.</p><p>Here we introduce the main idea of formalizing the Coinswap protocol based on our proposed model as an example of extending our model. When formalizing Coinswap, the characteristic of hash lock and time lock are required to be captured additionally. We specify the hash lock with the local macro <monospace>e=&lt;pk(x),hash(i)&gt;</monospace>. It means that <monospace>e</monospace> equals the public key of coin receiver appended with the hash value of a secret value, and <monospace>s</monospace> should be the signature of the coin receiver appended with the hash preimage. We specify the time lock with the local macro <monospace>e=&lt;pk(x1),h+j,pk(x)&gt;</monospace>. It means that <monospace>e</monospace> equals the public key of coin refunder appended with a certain block height and the public key of the coin receiver, and <monospace>s</monospace>. The transaction can be unlocked if the coin receiver provides its signature and the chain height is no higher than <monospace>(h+j)<inline-formula id=\"\"><tex-math notation=\"LaTeX\">$^{th}$\n</tex-math></inline-formula></monospace> blocks, or the coin refunder provides its signature and the chain height is higher than <monospace>(h+j)<inline-formula id=\"\"><tex-math notation=\"LaTeX\">$^{th}$\n</tex-math></inline-formula></monospace> blocks. Similarly, we specify the local macro <monospace>e=&lt;pk(x1),h+j,h(i),pk(x)&gt;</monospace>, which means that <monospace>e</monospace> is the hash lock combined with the time lock. We also add the definition and the restrictions on the action <monospace>Claim_lock</monospace> and <monospace>Claim_unlock</monospace> and remove the definition and the restrictions on the Blindcoin warranty-relevant actions in our model.</p><p>The security properties and the encoded model lemmas of Coinswap can refer to the ones in our model. Here we take the formalization of Coinswap authentication for example. We guard the insecure states of CoinSwap that violate the <i>Non-injective Agreement</i> with three lemmas <monospace>Agreement_nia_Lock</monospace>, <monospace>Agreement_nia_Offer</monospace>, and <monospace>Agreement_nia_ Unlock</monospace>. We guard against the CoinSwap attacks violating the <i>Injective Agreement</i> with three lemmas <monospace>Agreement_ia_Lock</monospace>, <monospace>Agreement_ia_ Offer</monospace> and <monospace>Agreement_ia_ Unlock</monospace> in the model. As an example, the encoded model lemmas <monospace>Agreement_ nia_ Lock</monospace> and <monospace>Agreement_ia_Lock</monospace> are shown below.\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu55-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu55-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu56-3228109-large.gif\" data-fig-id=\"\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu56-3228109-small.gif\" alt=\" - \"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\"> </b><fig/></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p></div></div>\n<div class=\"section\" id=\"sec8\"><div class=\"header article-hdr\"><div class=\"kicker\">\n\t\t                        SECTION VIII.</div><h2>Conclusion</h2></div><p>This work proposes an automated-verifiable symbolic model for the Blindcoin protocol. It is a comprehensive model that captures the structural transactions, growing blockchain, and mixing services to detect attacks in real-work security scenarios. We overcome the challenges of formalizing and automatically verifying Bitcoin-compatible mixing protocol with a large number of interactions. We formalize the required security properties with fine-grained definitions and encode them into Blindcoin security lemmas, including authentication, accountability, anonymity, and balance consistency. Blindcoin state transitions are deliberately modeled to capture the semantics of multiple layers of Bitcoin and the features of Blindcoin. Our formal model is tool-friendly which can be reasoned automatically and our verification considers different security scenarios. We detect the Blindcoin vulnerabilities and provide the fix suggestions. Furthermore, the proposed model is generic and easy to be extended to verify other Bitcoin-compatible mixing protocols.</p><p>In the future, we will enlarge the set of model elements to capture other kinds of blockchain-compatible mixing protocols, not limited to the Blindcoin protocol. We are also trying to achieve automatic modeling, which means that the applied Blindcoin model elements can be selected automatically based on the informal protocol description.</p></div>\n\n<div class=\"section\" id=\"app1\"><h2/><h1>APPENDIX Proofs of Violated Lemmas and the Detected Insecure States</h1><p>See <a ref-type=\"fig\" anchor=\"fig6\" class=\"fulltext-link\">Figs. 6</a>\u2013<a ref-type=\"fig\" anchor=\"fig7\" class=\"fulltext-link\"/><a ref-type=\"fig\" anchor=\"fig8\" class=\"fulltext-link\"/><a ref-type=\"fig\" anchor=\"fig9\" class=\"fulltext-link\"/><a ref-type=\"fig\" anchor=\"fig10\" class=\"fulltext-link\"/><a ref-type=\"fig\" anchor=\"fig11\" class=\"fulltext-link\"/><a ref-type=\"fig\" anchor=\"fig12\" class=\"fulltext-link\"/><a ref-type=\"fig\" anchor=\"fig13\" class=\"fulltext-link\"/><a ref-type=\"fig\" anchor=\"fig14\" class=\"fulltext-link\"/><a ref-type=\"fig\" anchor=\"fig15\" class=\"fulltext-link\"/><a ref-type=\"fig\" anchor=\"fig16\" class=\"fulltext-link\"/><a ref-type=\"fig\" anchor=\"fig17\" class=\"fulltext-link\"/><a ref-type=\"fig\" anchor=\"fig18\" class=\"fulltext-link\"/><a ref-type=\"fig\" anchor=\"fig19\" class=\"fulltext-link\">19</a>.\n<div class=\"figure figure-full\" id=\"fig6\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu6-3228109-large.gif\" data-fig-id=\"fig6\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu6-3228109-small.gif\" alt=\"FIGURE 6. - Proof of lemma Agreement_nia_offer.\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\">FIGURE 6. </b><fig><p>Proof of lemma <monospace>Agreement_nia_offer</monospace>.</p></fig></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"fig7\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu7-3228109-large.gif\" data-fig-id=\"fig7\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu7-3228109-small.gif\" alt=\"FIGURE 7. - The conflicted actions detected in the proof violate the lemma Agreement_nia_offer. Lowe\u2019s taxonomy specifies injective agreement has a higher level than non-injective agreement. And our model lemma Agreement_ia_offer specifies a higher level of authentication than the lemma Agreement_nia_offer. The detected actions also violate the lemma Agreement_ia_offer.\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\">FIGURE 7. </b><fig><p>The conflicted actions detected in the proof violate the lemma <monospace>Agreement_nia_offer</monospace>. Lowe\u2019s taxonomy specifies injective agreement has a higher level than non-injective agreement. And our model lemma <monospace>Agreement_ia_offer</monospace> specifies a higher level of authentication than the lemma <monospace>Agreement_nia_offer</monospace>. The detected actions also violate the lemma <monospace>Agreement_ia_offer</monospace>.</p></fig></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"fig8\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu8-3228109-large.gif\" data-fig-id=\"fig8\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu8-3228109-small.gif\" alt=\"FIGURE 8. - Proof of lemma Agreement_nia_Dst.\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\">FIGURE 8. </b><fig><p>Proof of lemma <monospace>Agreement_nia_Dst</monospace>.</p></fig></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"fig9\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu9-3228109-large.gif\" data-fig-id=\"fig9\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu9-3228109-small.gif\" alt=\"FIGURE 9. - The conflicted actions detected in the proof violate the lemma Agreement_nia_Dst. And our model lemma Agreement_ia_Dst specifies a higher level of authentication than the lemma Agreement_nia_Dst. The detected actions also violate the lemma Agreement_ia_Dst.\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\">FIGURE 9. </b><fig><p>The conflicted actions detected in the proof violate the lemma <monospace>Agreement_nia_Dst</monospace>. And our model lemma <monospace>Agreement_ia_Dst</monospace> specifies a higher level of authentication than the lemma <monospace>Agreement_nia_Dst</monospace>. The detected actions also violate the lemma <monospace>Agreement_ia_Dst</monospace>.</p></fig></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"fig10\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu10-3228109-large.gif\" data-fig-id=\"fig10\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu10-3228109-small.gif\" alt=\"FIGURE 10. - Proof of lemma Accountable_A1.\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\">FIGURE 10. </b><fig><p>Proof of lemma <monospace>Accountable_A1</monospace>.</p></fig></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"fig11\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu11-3228109-large.gif\" data-fig-id=\"fig11\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu11-3228109-small.gif\" alt=\"FIGURE 11. - The conflicted actions detected in the proof violate the lemma Accountable_A1.\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\">FIGURE 11. </b><fig><p>The conflicted actions detected in the proof violate the lemma <monospace>Accountable_A1</monospace>.</p></fig></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"fig12\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu12-3228109-large.gif\" data-fig-id=\"fig12\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu12-3228109-small.gif\" alt=\"FIGURE 12. - Proof of lemma Secret_Mapping.\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\">FIGURE 12. </b><fig><p>Proof of lemma <monospace>Secret_Mapping</monospace>.</p></fig></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"fig13\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu13-3228109-large.gif\" data-fig-id=\"fig13\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu13-3228109-small.gif\" alt=\"FIGURE 13. - The conflicted actions detected in the proof violate the lemma Secret_Mapping.\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\">FIGURE 13. </b><fig><p>The conflicted actions detected in the proof violate the lemma <monospace>Secret_Mapping</monospace>.</p></fig></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"fig14\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu14-3228109-large.gif\" data-fig-id=\"fig14\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu14-3228109-small.gif\" alt=\"FIGURE 14. - Proof of lemma No_Double_Spending.\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\">FIGURE 14. </b><fig><p>Proof of lemma <monospace>No_Double_Spending</monospace>.</p></fig></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"fig15\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu15-3228109-large.gif\" data-fig-id=\"fig15\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu15-3228109-small.gif\" alt=\"FIGURE 15. - The conflicted actions detected in the proof violate the lemma No_Double_Spending.\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\">FIGURE 15. </b><fig><p>The conflicted actions detected in the proof violate the lemma <monospace>No_Double_Spending</monospace>.</p></fig></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"fig16\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu16-3228109-large.gif\" data-fig-id=\"fig16\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu16-3228109-small.gif\" alt=\"FIGURE 16. - Proof of Consistency_SR.\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\">FIGURE 16. </b><fig><p>Proof of <monospace>Consistency_SR</monospace>.</p></fig></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"fig17\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu17-3228109-large.gif\" data-fig-id=\"fig17\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu17-3228109-small.gif\" alt=\"FIGURE 17. - The conflicted actions detected in the proof violate the lemma Consistency_SR.\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\">FIGURE 17. </b><fig><p>The conflicted actions detected in the proof violate the lemma <monospace>Consistency_SR</monospace>.</p></fig></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"fig18\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu18-3228109-large.gif\" data-fig-id=\"fig18\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu18-3228109-small.gif\" alt=\"FIGURE 18. - Proof of Consistency_Fund.\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\">FIGURE 18. </b><fig><p>Proof of <monospace>Consistency_Fund</monospace>.</p></fig></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div>\n<div class=\"figure figure-full\" id=\"fig19\"><!--\n          Workaround for combined images.Eg.- 1000116 Fig. 5\n        --><div class=\"img-wrap\"><a href=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu19-3228109-large.gif\" data-fig-id=\"fig19\"><img src=\"/mediastore_new/IEEE/content/media/6287639/9668973/9978631/xu19-3228109-small.gif\" alt=\"FIGURE 19. - The conflicted actions detected in the proof violate the lemma Consistency_Fund.\"/><div class=\"zoom\" title=\"View Larger Image\"/></a></div><div class=\"figcaption\"><b class=\"title\">FIGURE 19. </b><fig><p>The conflicted actions detected in the proof violate the lemma <monospace>Consistency_Fund</monospace>.</p></fig></div><p class=\"links\"><a href=\"/document/9978631/all-figures\" class=\"all\">Show All</a></p></div></p></div>\n</div></div></response>\n"
}